{"ast":null,"code":"import { Box3, Float32BufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InterleavedBufferAttribute, Sphere, Vector3, WireframeGeometry } from \"../../../build/three.module.js\";\nvar LineSegmentsGeometry = function LineSegmentsGeometry() {\n  InstancedBufferGeometry.call(this);\n  this.type = 'LineSegmentsGeometry';\n  var positions = [-1, 2, 0, 1, 2, 0, -1, 1, 0, 1, 1, 0, -1, 0, 0, 1, 0, 0, -1, -1, 0, 1, -1, 0];\n  var uvs = [-1, 2, 1, 2, -1, 1, 1, 1, -1, -1, 1, -1, -1, -2, 1, -2];\n  var index = [0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5];\n  this.setIndex(index);\n  this.setAttribute('position', new Float32BufferAttribute(positions, 3));\n  this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n};\nLineSegmentsGeometry.prototype = Object.assign(Object.create(InstancedBufferGeometry.prototype), {\n  constructor: LineSegmentsGeometry,\n  isLineSegmentsGeometry: true,\n  applyMatrix4: function applyMatrix4(matrix) {\n    var start = this.attributes.instanceStart;\n    var end = this.attributes.instanceEnd;\n    if (start !== undefined) {\n      start.applyMatrix4(matrix);\n      end.applyMatrix4(matrix);\n      start.needsUpdate = true;\n    }\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n    return this;\n  },\n  setPositions: function setPositions(array) {\n    var lineSegments;\n    if (array instanceof Float32Array) {\n      lineSegments = array;\n    } else if (Array.isArray(array)) {\n      lineSegments = new Float32Array(array);\n    }\n    var instanceBuffer = new InstancedInterleavedBuffer(lineSegments, 6, 1); // xyz, xyz\n\n    this.setAttribute('instanceStart', new InterleavedBufferAttribute(instanceBuffer, 3, 0)); // xyz\n    this.setAttribute('instanceEnd', new InterleavedBufferAttribute(instanceBuffer, 3, 3)); // xyz\n\n    //\n\n    this.computeBoundingBox();\n    this.computeBoundingSphere();\n    return this;\n  },\n  setColors: function setColors(array) {\n    var colors;\n    if (array instanceof Float32Array) {\n      colors = array;\n    } else if (Array.isArray(array)) {\n      colors = new Float32Array(array);\n    }\n    var instanceColorBuffer = new InstancedInterleavedBuffer(colors, 6, 1); // rgb, rgb\n\n    this.setAttribute('instanceColorStart', new InterleavedBufferAttribute(instanceColorBuffer, 3, 0)); // rgb\n    this.setAttribute('instanceColorEnd', new InterleavedBufferAttribute(instanceColorBuffer, 3, 3)); // rgb\n\n    return this;\n  },\n  fromWireframeGeometry: function fromWireframeGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  },\n  fromEdgesGeometry: function fromEdgesGeometry(geometry) {\n    this.setPositions(geometry.attributes.position.array);\n    return this;\n  },\n  fromMesh: function fromMesh(mesh) {\n    this.fromWireframeGeometry(new WireframeGeometry(mesh.geometry));\n\n    // set colors, maybe\n\n    return this;\n  },\n  fromLineSegments: function fromLineSegments(lineSegments) {\n    var geometry = lineSegments.geometry;\n    if (geometry.isGeometry) {\n      this.setPositions(geometry.vertices);\n    } else if (geometry.isBufferGeometry) {\n      this.setPositions(geometry.attributes.position.array); // assumes non-indexed\n    }\n\n    // set colors, maybe\n\n    return this;\n  },\n  computeBoundingBox: function () {\n    var box = new Box3();\n    return function computeBoundingBox() {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n      var start = this.attributes.instanceStart;\n      var end = this.attributes.instanceEnd;\n      if (start !== undefined && end !== undefined) {\n        this.boundingBox.setFromBufferAttribute(start);\n        box.setFromBufferAttribute(end);\n        this.boundingBox.union(box);\n      }\n    };\n  }(),\n  computeBoundingSphere: function () {\n    var vector = new Vector3();\n    return function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n      if (this.boundingBox === null) {\n        this.computeBoundingBox();\n      }\n      var start = this.attributes.instanceStart;\n      var end = this.attributes.instanceEnd;\n      if (start !== undefined && end !== undefined) {\n        var center = this.boundingSphere.center;\n        this.boundingBox.getCenter(center);\n        var maxRadiusSq = 0;\n        for (var i = 0, il = start.count; i < il; i++) {\n          vector.fromBufferAttribute(start, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n          vector.fromBufferAttribute(end, i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this);\n        }\n      }\n    };\n  }(),\n  toJSON: function toJSON() {\n\n    // todo\n  },\n  applyMatrix: function applyMatrix(matrix) {\n    console.warn('THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().');\n    return this.applyMatrix4(matrix);\n  }\n});\nexport { LineSegmentsGeometry };","map":{"version":3,"names":["Box3","Float32BufferAttribute","InstancedBufferGeometry","InstancedInterleavedBuffer","InterleavedBufferAttribute","Sphere","Vector3","WireframeGeometry","LineSegmentsGeometry","call","type","positions","uvs","index","setIndex","setAttribute","prototype","Object","assign","create","constructor","isLineSegmentsGeometry","applyMatrix4","matrix","start","attributes","instanceStart","end","instanceEnd","undefined","needsUpdate","boundingBox","computeBoundingBox","boundingSphere","computeBoundingSphere","setPositions","array","lineSegments","Float32Array","Array","isArray","instanceBuffer","setColors","colors","instanceColorBuffer","fromWireframeGeometry","geometry","position","fromEdgesGeometry","fromMesh","mesh","fromLineSegments","isGeometry","vertices","isBufferGeometry","box","setFromBufferAttribute","union","vector","center","getCenter","maxRadiusSq","i","il","count","fromBufferAttribute","Math","max","distanceToSquared","radius","sqrt","isNaN","console","error","toJSON","applyMatrix","warn"],"sources":["/Users/Aaron/Desktop/mirrorsReactThreeFiber/node_modules/three/examples/jsm/lines/LineSegmentsGeometry.js"],"sourcesContent":["import {\n\tBox3,\n\tFloat32BufferAttribute,\n\tInstancedBufferGeometry,\n\tInstancedInterleavedBuffer,\n\tInterleavedBufferAttribute,\n\tSphere,\n\tVector3,\n\tWireframeGeometry\n} from \"../../../build/three.module.js\";\n\nvar LineSegmentsGeometry = function () {\n\n\tInstancedBufferGeometry.call( this );\n\n\tthis.type = 'LineSegmentsGeometry';\n\n\tvar positions = [ - 1, 2, 0, 1, 2, 0, - 1, 1, 0, 1, 1, 0, - 1, 0, 0, 1, 0, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\tvar uvs = [ - 1, 2, 1, 2, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 2, 1, - 2 ];\n\tvar index = [ 0, 2, 1, 2, 3, 1, 2, 4, 3, 4, 5, 3, 4, 6, 5, 6, 7, 5 ];\n\n\tthis.setIndex( index );\n\tthis.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n};\n\nLineSegmentsGeometry.prototype = Object.assign( Object.create( InstancedBufferGeometry.prototype ), {\n\n\tconstructor: LineSegmentsGeometry,\n\n\tisLineSegmentsGeometry: true,\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tvar start = this.attributes.instanceStart;\n\t\tvar end = this.attributes.instanceEnd;\n\n\t\tif ( start !== undefined ) {\n\n\t\t\tstart.applyMatrix4( matrix );\n\n\t\t\tend.applyMatrix4( matrix );\n\n\t\t\tstart.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetPositions: function ( array ) {\n\n\t\tvar lineSegments;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tlineSegments = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tlineSegments = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceBuffer = new InstancedInterleavedBuffer( lineSegments, 6, 1 ); // xyz, xyz\n\n\t\tthis.setAttribute( 'instanceStart', new InterleavedBufferAttribute( instanceBuffer, 3, 0 ) ); // xyz\n\t\tthis.setAttribute( 'instanceEnd', new InterleavedBufferAttribute( instanceBuffer, 3, 3 ) ); // xyz\n\n\t\t//\n\n\t\tthis.computeBoundingBox();\n\t\tthis.computeBoundingSphere();\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\tvar colors;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\tcolors = array;\n\n\t\t} else if ( Array.isArray( array ) ) {\n\n\t\t\tcolors = new Float32Array( array );\n\n\t\t}\n\n\t\tvar instanceColorBuffer = new InstancedInterleavedBuffer( colors, 6, 1 ); // rgb, rgb\n\n\t\tthis.setAttribute( 'instanceColorStart', new InterleavedBufferAttribute( instanceColorBuffer, 3, 0 ) ); // rgb\n\t\tthis.setAttribute( 'instanceColorEnd', new InterleavedBufferAttribute( instanceColorBuffer, 3, 3 ) ); // rgb\n\n\t\treturn this;\n\n\t},\n\n\tfromWireframeGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromEdgesGeometry: function ( geometry ) {\n\n\t\tthis.setPositions( geometry.attributes.position.array );\n\n\t\treturn this;\n\n\t},\n\n\tfromMesh: function ( mesh ) {\n\n\t\tthis.fromWireframeGeometry( new WireframeGeometry( mesh.geometry ) );\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tfromLineSegments: function ( lineSegments ) {\n\n\t\tvar geometry = lineSegments.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function computeBoundingBox() {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( start );\n\n\t\t\t\tbox.setFromBufferAttribute( end );\n\n\t\t\t\tthis.boundingBox.union( box );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tvar start = this.attributes.instanceStart;\n\t\t\tvar end = this.attributes.instanceEnd;\n\n\t\t\tif ( start !== undefined && end !== undefined ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tthis.boundingBox.getCenter( center );\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = start.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.fromBufferAttribute( start, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t\tvector.fromBufferAttribute( end, i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function () {\n\n\t\t// todo\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tconsole.warn( 'THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4().' );\n\n\t\treturn this.applyMatrix4( matrix );\n\n\t}\n\n} );\n\nexport { LineSegmentsGeometry };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}