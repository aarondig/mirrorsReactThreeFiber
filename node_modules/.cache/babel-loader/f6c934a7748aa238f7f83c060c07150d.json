{"ast":null,"code":"import { Curve, Vector3, Vector4 } from \"../../../build/three.module.js\";\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nvar NURBSCurve = function NURBSCurve(degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */) {\n  Curve.call(this);\n  this.degree = degree;\n  this.knots = knots;\n  this.controlPoints = [];\n  // Used by periodic NURBS to remove hidden spans\n  this.startKnot = startKnot || 0;\n  this.endKnot = endKnot || this.knots.length - 1;\n  for (var i = 0; i < controlPoints.length; ++i) {\n    // ensure Vector4 for control points\n    var point = controlPoints[i];\n    this.controlPoints[i] = new Vector4(point.x, point.y, point.z, point.w);\n  }\n};\nNURBSCurve.prototype = Object.create(Curve.prototype);\nNURBSCurve.prototype.constructor = NURBSCurve;\nNURBSCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector3();\n  var u = this.knots[this.startKnot] + t * (this.knots[this.endKnot] - this.knots[this.startKnot]); // linear mapping t->u\n\n  // following results in (wx, wy, wz, w) homogeneous point\n  var hpoint = NURBSUtils.calcBSplinePoint(this.degree, this.knots, this.controlPoints, u);\n  if (hpoint.w != 1.0) {\n    // project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n    hpoint.divideScalar(hpoint.w);\n  }\n  return point.set(hpoint.x, hpoint.y, hpoint.z);\n};\nNURBSCurve.prototype.getTangent = function (t, optionalTarget) {\n  var tangent = optionalTarget || new Vector3();\n  var u = this.knots[0] + t * (this.knots[this.knots.length - 1] - this.knots[0]);\n  var ders = NURBSUtils.calcNURBSDerivatives(this.degree, this.knots, this.controlPoints, u, 1);\n  tangent.copy(ders[1]).normalize();\n  return tangent;\n};\nexport { NURBSCurve };","map":{"version":3,"names":["Curve","Vector3","Vector4","NURBSUtils","NURBSCurve","degree","knots","controlPoints","startKnot","endKnot","call","length","i","point","x","y","z","w","prototype","Object","create","constructor","getPoint","t","optionalTarget","u","hpoint","calcBSplinePoint","divideScalar","set","getTangent","tangent","ders","calcNURBSDerivatives","copy","normalize"],"sources":["/Users/Aaron/Desktop/mirrorsReactThreeFiber/node_modules/three/examples/jsm/curves/NURBSCurve.js"],"sourcesContent":["import {\n\tCurve,\n\tVector3,\n\tVector4\n} from \"../../../build/three.module.js\";\nimport { NURBSUtils } from \"../curves/NURBSUtils.js\";\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nvar NURBSCurve = function ( degree, knots /* array of reals */, controlPoints /* array of Vector(2|3|4) */, startKnot /* index in knots */, endKnot /* index in knots */ ) {\n\n\tCurve.call( this );\n\n\tthis.degree = degree;\n\tthis.knots = knots;\n\tthis.controlPoints = [];\n\t// Used by periodic NURBS to remove hidden spans\n\tthis.startKnot = startKnot || 0;\n\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\tfor ( var i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t// ensure Vector4 for control points\n\t\tvar point = controlPoints[ i ];\n\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t}\n\n};\n\n\nNURBSCurve.prototype = Object.create( Curve.prototype );\nNURBSCurve.prototype.constructor = NURBSCurve;\n\n\nNURBSCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t// following results in (wx, wy, wz, w) homogeneous point\n\tvar hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\tif ( hpoint.w != 1.0 ) {\n\n\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\thpoint.divideScalar( hpoint.w );\n\n\t}\n\n\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n};\n\n\nNURBSCurve.prototype.getTangent = function ( t, optionalTarget ) {\n\n\tvar tangent = optionalTarget || new Vector3();\n\n\tvar u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\tvar ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\ttangent.copy( ders[ 1 ] ).normalize();\n\n\treturn tangent;\n\n};\n\nexport { NURBSCurve };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}