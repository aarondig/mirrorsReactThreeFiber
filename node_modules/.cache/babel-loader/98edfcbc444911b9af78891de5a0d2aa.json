{"ast":null,"code":"import { BoxBufferGeometry, BufferGeometry, Color, CylinderBufferGeometry, DoubleSide, Euler, Float32BufferAttribute, Line, LineBasicMaterial, Matrix4, Mesh, MeshBasicMaterial, Object3D, OctahedronBufferGeometry, PlaneBufferGeometry, Quaternion, Raycaster, SphereBufferGeometry, TorusBufferGeometry, Vector3 } from \"../../../build/three.module.js\";\nvar TransformControls = function TransformControls(camera, domElement) {\n  if (domElement === undefined) {\n    console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n    domElement = document;\n  }\n  Object3D.call(this);\n  this.visible = false;\n  this.domElement = domElement;\n  var _gizmo = new TransformControlsGizmo();\n  this.add(_gizmo);\n  var _plane = new TransformControlsPlane();\n  this.add(_plane);\n  var scope = this;\n\n  // Define properties with getters/setter\n  // Setting the defined property will automatically trigger change event\n  // Defined properties are passed down to gizmo and plane\n\n  defineProperty(\"camera\", camera);\n  defineProperty(\"object\", undefined);\n  defineProperty(\"enabled\", true);\n  defineProperty(\"axis\", null);\n  defineProperty(\"mode\", \"translate\");\n  defineProperty(\"translationSnap\", null);\n  defineProperty(\"rotationSnap\", null);\n  defineProperty(\"scaleSnap\", null);\n  defineProperty(\"space\", \"world\");\n  defineProperty(\"size\", 1);\n  defineProperty(\"dragging\", false);\n  defineProperty(\"showX\", true);\n  defineProperty(\"showY\", true);\n  defineProperty(\"showZ\", true);\n  var changeEvent = {\n    type: \"change\"\n  };\n  var mouseDownEvent = {\n    type: \"mouseDown\"\n  };\n  var mouseUpEvent = {\n    type: \"mouseUp\",\n    mode: scope.mode\n  };\n  var objectChangeEvent = {\n    type: \"objectChange\"\n  };\n\n  // Reusable utility variables\n\n  var raycaster = new Raycaster();\n  function intersectObjectWithRay(object, raycaster, includeInvisible) {\n    var allIntersections = raycaster.intersectObject(object, true);\n    for (var i = 0; i < allIntersections.length; i++) {\n      if (allIntersections[i].object.visible || includeInvisible) {\n        return allIntersections[i];\n      }\n    }\n    return false;\n  }\n  var _tempVector = new Vector3();\n  var _tempVector2 = new Vector3();\n  var _tempQuaternion = new Quaternion();\n  var _unit = {\n    X: new Vector3(1, 0, 0),\n    Y: new Vector3(0, 1, 0),\n    Z: new Vector3(0, 0, 1)\n  };\n  var pointStart = new Vector3();\n  var pointEnd = new Vector3();\n  var offset = new Vector3();\n  var rotationAxis = new Vector3();\n  var startNorm = new Vector3();\n  var endNorm = new Vector3();\n  var rotationAngle = 0;\n  var cameraPosition = new Vector3();\n  var cameraQuaternion = new Quaternion();\n  var cameraScale = new Vector3();\n  var parentPosition = new Vector3();\n  var parentQuaternion = new Quaternion();\n  var parentQuaternionInv = new Quaternion();\n  var parentScale = new Vector3();\n  var worldPositionStart = new Vector3();\n  var worldQuaternionStart = new Quaternion();\n  var worldScaleStart = new Vector3();\n  var worldPosition = new Vector3();\n  var worldQuaternion = new Quaternion();\n  var worldQuaternionInv = new Quaternion();\n  var worldScale = new Vector3();\n  var eye = new Vector3();\n  var positionStart = new Vector3();\n  var quaternionStart = new Quaternion();\n  var scaleStart = new Vector3();\n\n  // TODO: remove properties unused in plane and gizmo\n\n  defineProperty(\"worldPosition\", worldPosition);\n  defineProperty(\"worldPositionStart\", worldPositionStart);\n  defineProperty(\"worldQuaternion\", worldQuaternion);\n  defineProperty(\"worldQuaternionStart\", worldQuaternionStart);\n  defineProperty(\"cameraPosition\", cameraPosition);\n  defineProperty(\"cameraQuaternion\", cameraQuaternion);\n  defineProperty(\"pointStart\", pointStart);\n  defineProperty(\"pointEnd\", pointEnd);\n  defineProperty(\"rotationAxis\", rotationAxis);\n  defineProperty(\"rotationAngle\", rotationAngle);\n  defineProperty(\"eye\", eye);\n  {\n    domElement.addEventListener(\"pointerdown\", onPointerDown, false);\n    domElement.addEventListener(\"pointermove\", onPointerHover, false);\n    scope.domElement.ownerDocument.addEventListener(\"pointerup\", onPointerUp, false);\n  }\n  this.dispose = function () {\n    domElement.removeEventListener(\"pointerdown\", onPointerDown);\n    domElement.removeEventListener(\"pointermove\", onPointerHover);\n    scope.domElement.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n    scope.domElement.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n    this.traverse(function (child) {\n      if (child.geometry) child.geometry.dispose();\n      if (child.material) child.material.dispose();\n    });\n  };\n\n  // Set current object\n  this.attach = function (object) {\n    this.object = object;\n    this.visible = true;\n    return this;\n  };\n\n  // Detatch from object\n  this.detach = function () {\n    this.object = undefined;\n    this.visible = false;\n    this.axis = null;\n    return this;\n  };\n\n  // Defined getter, setter and store for a property\n  function defineProperty(propName, defaultValue) {\n    var propValue = defaultValue;\n    Object.defineProperty(scope, propName, {\n      get: function get() {\n        return propValue !== undefined ? propValue : defaultValue;\n      },\n      set: function set(value) {\n        if (propValue !== value) {\n          propValue = value;\n          _plane[propName] = value;\n          _gizmo[propName] = value;\n          scope.dispatchEvent({\n            type: propName + \"-changed\",\n            value: value\n          });\n          scope.dispatchEvent(changeEvent);\n        }\n      }\n    });\n    scope[propName] = defaultValue;\n    _plane[propName] = defaultValue;\n    _gizmo[propName] = defaultValue;\n  }\n\n  // updateMatrixWorld  updates key transformation variables\n  this.updateMatrixWorld = function () {\n    if (this.object !== undefined) {\n      this.object.updateMatrixWorld();\n      if (this.object.parent === null) {\n        console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n      } else {\n        this.object.parent.matrixWorld.decompose(parentPosition, parentQuaternion, parentScale);\n      }\n      this.object.matrixWorld.decompose(worldPosition, worldQuaternion, worldScale);\n      parentQuaternionInv.copy(parentQuaternion).invert();\n      worldQuaternionInv.copy(worldQuaternion).invert();\n    }\n    this.camera.updateMatrixWorld();\n    this.camera.matrixWorld.decompose(cameraPosition, cameraQuaternion, cameraScale);\n    eye.copy(cameraPosition).sub(worldPosition).normalize();\n    Object3D.prototype.updateMatrixWorld.call(this);\n  };\n  this.pointerHover = function (pointer) {\n    if (this.object === undefined || this.dragging === true) return;\n    raycaster.setFromCamera(pointer, this.camera);\n    var intersect = intersectObjectWithRay(_gizmo.picker[this.mode], raycaster);\n    if (intersect) {\n      this.axis = intersect.object.name;\n    } else {\n      this.axis = null;\n    }\n  };\n  this.pointerDown = function (pointer) {\n    if (this.object === undefined || this.dragging === true || pointer.button !== 0) return;\n    if (this.axis !== null) {\n      raycaster.setFromCamera(pointer, this.camera);\n      var planeIntersect = intersectObjectWithRay(_plane, raycaster, true);\n      if (planeIntersect) {\n        var space = this.space;\n        if (this.mode === 'scale') {\n          space = 'local';\n        } else if (this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ') {\n          space = 'world';\n        }\n        if (space === 'local' && this.mode === 'rotate') {\n          var snap = this.rotationSnap;\n          if (this.axis === 'X' && snap) this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n          if (this.axis === 'Y' && snap) this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n          if (this.axis === 'Z' && snap) this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n        }\n        this.object.updateMatrixWorld();\n        this.object.parent.updateMatrixWorld();\n        positionStart.copy(this.object.position);\n        quaternionStart.copy(this.object.quaternion);\n        scaleStart.copy(this.object.scale);\n        this.object.matrixWorld.decompose(worldPositionStart, worldQuaternionStart, worldScaleStart);\n        pointStart.copy(planeIntersect.point).sub(worldPositionStart);\n      }\n      this.dragging = true;\n      mouseDownEvent.mode = this.mode;\n      this.dispatchEvent(mouseDownEvent);\n    }\n  };\n  this.pointerMove = function (pointer) {\n    var axis = this.axis;\n    var mode = this.mode;\n    var object = this.object;\n    var space = this.space;\n    if (mode === 'scale') {\n      space = 'local';\n    } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n      space = 'world';\n    }\n    if (object === undefined || axis === null || this.dragging === false || pointer.button !== -1) return;\n    raycaster.setFromCamera(pointer, this.camera);\n    var planeIntersect = intersectObjectWithRay(_plane, raycaster, true);\n    if (!planeIntersect) return;\n    pointEnd.copy(planeIntersect.point).sub(worldPositionStart);\n    if (mode === 'translate') {\n      // Apply translate\n\n      offset.copy(pointEnd).sub(pointStart);\n      if (space === 'local' && axis !== 'XYZ') {\n        offset.applyQuaternion(worldQuaternionInv);\n      }\n      if (axis.indexOf('X') === -1) offset.x = 0;\n      if (axis.indexOf('Y') === -1) offset.y = 0;\n      if (axis.indexOf('Z') === -1) offset.z = 0;\n      if (space === 'local' && axis !== 'XYZ') {\n        offset.applyQuaternion(quaternionStart).divide(parentScale);\n      } else {\n        offset.applyQuaternion(parentQuaternionInv).divide(parentScale);\n      }\n      object.position.copy(offset).add(positionStart);\n\n      // Apply translation snap\n\n      if (this.translationSnap) {\n        if (space === 'local') {\n          object.position.applyQuaternion(_tempQuaternion.copy(quaternionStart).invert());\n          if (axis.search('X') !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search('Y') !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search('Z') !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n          object.position.applyQuaternion(quaternionStart);\n        }\n        if (space === 'world') {\n          if (object.parent) {\n            object.position.add(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n          if (axis.search('X') !== -1) {\n            object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search('Y') !== -1) {\n            object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n          }\n          if (axis.search('Z') !== -1) {\n            object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n          }\n          if (object.parent) {\n            object.position.sub(_tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n          }\n        }\n      }\n    } else if (mode === 'scale') {\n      if (axis.search('XYZ') !== -1) {\n        var d = pointEnd.length() / pointStart.length();\n        if (pointEnd.dot(pointStart) < 0) d *= -1;\n        _tempVector2.set(d, d, d);\n      } else {\n        _tempVector.copy(pointStart);\n        _tempVector2.copy(pointEnd);\n        _tempVector.applyQuaternion(worldQuaternionInv);\n        _tempVector2.applyQuaternion(worldQuaternionInv);\n        _tempVector2.divide(_tempVector);\n        if (axis.search('X') === -1) {\n          _tempVector2.x = 1;\n        }\n        if (axis.search('Y') === -1) {\n          _tempVector2.y = 1;\n        }\n        if (axis.search('Z') === -1) {\n          _tempVector2.z = 1;\n        }\n      }\n\n      // Apply scale\n\n      object.scale.copy(scaleStart).multiply(_tempVector2);\n      if (this.scaleSnap) {\n        if (axis.search('X') !== -1) {\n          object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n        if (axis.search('Y') !== -1) {\n          object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n        if (axis.search('Z') !== -1) {\n          object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n        }\n      }\n    } else if (mode === 'rotate') {\n      offset.copy(pointEnd).sub(pointStart);\n      var ROTATION_SPEED = 20 / worldPosition.distanceTo(_tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n      if (axis === 'E') {\n        rotationAxis.copy(eye);\n        rotationAngle = pointEnd.angleTo(pointStart);\n        startNorm.copy(pointStart).normalize();\n        endNorm.copy(pointEnd).normalize();\n        rotationAngle *= endNorm.cross(startNorm).dot(eye) < 0 ? 1 : -1;\n      } else if (axis === 'XYZE') {\n        rotationAxis.copy(offset).cross(eye).normalize();\n        rotationAngle = offset.dot(_tempVector.copy(rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n      } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n        rotationAxis.copy(_unit[axis]);\n        _tempVector.copy(_unit[axis]);\n        if (space === 'local') {\n          _tempVector.applyQuaternion(worldQuaternion);\n        }\n        rotationAngle = offset.dot(_tempVector.cross(eye).normalize()) * ROTATION_SPEED;\n      }\n\n      // Apply rotation snap\n\n      if (this.rotationSnap) rotationAngle = Math.round(rotationAngle / this.rotationSnap) * this.rotationSnap;\n      this.rotationAngle = rotationAngle;\n\n      // Apply rotate\n      if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n        object.quaternion.copy(quaternionStart);\n        object.quaternion.multiply(_tempQuaternion.setFromAxisAngle(rotationAxis, rotationAngle)).normalize();\n      } else {\n        rotationAxis.applyQuaternion(parentQuaternionInv);\n        object.quaternion.copy(_tempQuaternion.setFromAxisAngle(rotationAxis, rotationAngle));\n        object.quaternion.multiply(quaternionStart).normalize();\n      }\n    }\n    this.dispatchEvent(changeEvent);\n    this.dispatchEvent(objectChangeEvent);\n  };\n  this.pointerUp = function (pointer) {\n    if (pointer.button !== 0) return;\n    if (this.dragging && this.axis !== null) {\n      mouseUpEvent.mode = this.mode;\n      this.dispatchEvent(mouseUpEvent);\n    }\n    this.dragging = false;\n    this.axis = null;\n  };\n\n  // normalize mouse / touch pointer and remap {x,y} to view space.\n\n  function getPointer(event) {\n    if (scope.domElement.ownerDocument.pointerLockElement) {\n      return {\n        x: 0,\n        y: 0,\n        button: event.button\n      };\n    } else {\n      var pointer = event.changedTouches ? event.changedTouches[0] : event;\n      var rect = domElement.getBoundingClientRect();\n      return {\n        x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n        y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n        button: event.button\n      };\n    }\n  }\n\n  // mouse / touch event handlers\n\n  function onPointerHover(event) {\n    if (!scope.enabled) return;\n    switch (event.pointerType) {\n      case 'mouse':\n      case 'pen':\n        scope.pointerHover(getPointer(event));\n        break;\n    }\n  }\n  function onPointerDown(event) {\n    if (!scope.enabled) return;\n    scope.domElement.style.touchAction = 'none'; // disable touch scroll\n    scope.domElement.ownerDocument.addEventListener(\"pointermove\", onPointerMove, false);\n    scope.pointerHover(getPointer(event));\n    scope.pointerDown(getPointer(event));\n  }\n  function onPointerMove(event) {\n    if (!scope.enabled) return;\n    scope.pointerMove(getPointer(event));\n  }\n  function onPointerUp(event) {\n    if (!scope.enabled) return;\n    scope.domElement.style.touchAction = '';\n    scope.domElement.ownerDocument.removeEventListener(\"pointermove\", onPointerMove, false);\n    scope.pointerUp(getPointer(event));\n  }\n\n  // TODO: deprecate\n\n  this.getMode = function () {\n    return scope.mode;\n  };\n  this.setMode = function (mode) {\n    scope.mode = mode;\n  };\n  this.setTranslationSnap = function (translationSnap) {\n    scope.translationSnap = translationSnap;\n  };\n  this.setRotationSnap = function (rotationSnap) {\n    scope.rotationSnap = rotationSnap;\n  };\n  this.setScaleSnap = function (scaleSnap) {\n    scope.scaleSnap = scaleSnap;\n  };\n  this.setSize = function (size) {\n    scope.size = size;\n  };\n  this.setSpace = function (space) {\n    scope.space = space;\n  };\n  this.update = function () {\n    console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n  };\n};\nTransformControls.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: TransformControls,\n  isTransformControls: true\n});\nvar TransformControlsGizmo = function TransformControlsGizmo() {\n  'use strict';\n\n  Object3D.call(this);\n  this.type = 'TransformControlsGizmo';\n\n  // shared materials\n\n  var gizmoMaterial = new MeshBasicMaterial({\n    depthTest: false,\n    depthWrite: false,\n    transparent: true,\n    side: DoubleSide,\n    fog: false,\n    toneMapped: false\n  });\n  var gizmoLineMaterial = new LineBasicMaterial({\n    depthTest: false,\n    depthWrite: false,\n    transparent: true,\n    linewidth: 1,\n    fog: false,\n    toneMapped: false\n  });\n\n  // Make unique material for each axis/color\n\n  var matInvisible = gizmoMaterial.clone();\n  matInvisible.opacity = 0.15;\n  var matHelper = gizmoMaterial.clone();\n  matHelper.opacity = 0.33;\n  var matRed = gizmoMaterial.clone();\n  matRed.color.set(0xff0000);\n  var matGreen = gizmoMaterial.clone();\n  matGreen.color.set(0x00ff00);\n  var matBlue = gizmoMaterial.clone();\n  matBlue.color.set(0x0000ff);\n  var matWhiteTransparent = gizmoMaterial.clone();\n  matWhiteTransparent.opacity = 0.25;\n  var matYellowTransparent = matWhiteTransparent.clone();\n  matYellowTransparent.color.set(0xffff00);\n  var matCyanTransparent = matWhiteTransparent.clone();\n  matCyanTransparent.color.set(0x00ffff);\n  var matMagentaTransparent = matWhiteTransparent.clone();\n  matMagentaTransparent.color.set(0xff00ff);\n  var matYellow = gizmoMaterial.clone();\n  matYellow.color.set(0xffff00);\n  var matLineRed = gizmoLineMaterial.clone();\n  matLineRed.color.set(0xff0000);\n  var matLineGreen = gizmoLineMaterial.clone();\n  matLineGreen.color.set(0x00ff00);\n  var matLineBlue = gizmoLineMaterial.clone();\n  matLineBlue.color.set(0x0000ff);\n  var matLineCyan = gizmoLineMaterial.clone();\n  matLineCyan.color.set(0x00ffff);\n  var matLineMagenta = gizmoLineMaterial.clone();\n  matLineMagenta.color.set(0xff00ff);\n  var matLineYellow = gizmoLineMaterial.clone();\n  matLineYellow.color.set(0xffff00);\n  var matLineGray = gizmoLineMaterial.clone();\n  matLineGray.color.set(0x787878);\n  var matLineYellowTransparent = matLineYellow.clone();\n  matLineYellowTransparent.opacity = 0.25;\n\n  // reusable geometry\n\n  var arrowGeometry = new CylinderBufferGeometry(0, 0.05, 0.2, 12, 1, false);\n  var scaleHandleGeometry = new BoxBufferGeometry(0.125, 0.125, 0.125);\n  var lineGeometry = new BufferGeometry();\n  lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n  var CircleGeometry = function CircleGeometry(radius, arc) {\n    var geometry = new BufferGeometry();\n    var vertices = [];\n    for (var i = 0; i <= 64 * arc; ++i) {\n      vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n    }\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    return geometry;\n  };\n\n  // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n  var TranslateHelperGeometry = function TranslateHelperGeometry() {\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n    return geometry;\n  };\n\n  // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n  var gizmoTranslate = {\n    X: [[new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, 'fwd'], [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, 'bwd'], [new Line(lineGeometry, matLineRed)]],\n    Y: [[new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, 'fwd'], [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]],\n    Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, 'fwd'], [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]],\n    XYZ: [[new Mesh(new OctahedronBufferGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n    XY: [[new Mesh(new PlaneBufferGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]], [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n    YZ: [[new Mesh(new PlaneBufferGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n    XZ: [[new Mesh(new PlaneBufferGeometry(0.295, 0.295), matMagentaTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]\n  };\n  var pickerTranslate = {\n    X: [[new Mesh(new CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n    Y: [[new Mesh(new CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n    Z: [[new Mesh(new CylinderBufferGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n    XYZ: [[new Mesh(new OctahedronBufferGeometry(0.2, 0), matInvisible)]],\n    XY: [[new Mesh(new PlaneBufferGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n    YZ: [[new Mesh(new PlaneBufferGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n    XZ: [[new Mesh(new PlaneBufferGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n  };\n  var helperTranslate = {\n    START: [[new Mesh(new OctahedronBufferGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n    END: [[new Mesh(new OctahedronBufferGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n    DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n    X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n    Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n    Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n  };\n  var gizmoRotate = {\n    X: [[new Line(CircleGeometry(1, 0.5), matLineRed)], [new Mesh(new OctahedronBufferGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]],\n    Y: [[new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]], [new Mesh(new OctahedronBufferGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]],\n    Z: [[new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]], [new Mesh(new OctahedronBufferGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]],\n    E: [[new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]], [new Mesh(new CylinderBufferGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderBufferGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderBufferGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 0.001]], [new Mesh(new CylinderBufferGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, 1.17, 0], [0, 0, 0], [1, 1, 0.001]]],\n    XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n  };\n  var helperRotate = {\n    AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n  };\n  var pickerRotate = {\n    X: [[new Mesh(new TorusBufferGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n    Y: [[new Mesh(new TorusBufferGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n    Z: [[new Mesh(new TorusBufferGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n    E: [[new Mesh(new TorusBufferGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n    XYZE: [[new Mesh(new SphereBufferGeometry(0.7, 10, 8), matInvisible)]]\n  };\n  var gizmoScale = {\n    X: [[new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]],\n    Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]],\n    Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]],\n    XY: [[new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n    YZ: [[new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n    XZ: [[new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n    XYZX: [[new Mesh(new BoxBufferGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n    XYZY: [[new Mesh(new BoxBufferGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n    XYZZ: [[new Mesh(new BoxBufferGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n  };\n  var pickerScale = {\n    X: [[new Mesh(new CylinderBufferGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n    Y: [[new Mesh(new CylinderBufferGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n    Z: [[new Mesh(new CylinderBufferGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n    XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n    YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n    XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n    XYZX: [[new Mesh(new BoxBufferGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n    XYZY: [[new Mesh(new BoxBufferGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n    XYZZ: [[new Mesh(new BoxBufferGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n  };\n  var helperScale = {\n    X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n    Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n    Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n  };\n\n  // Creates an Object3D with gizmos described in custom hierarchy definition.\n\n  var setupGizmo = function setupGizmo(gizmoMap) {\n    var gizmo = new Object3D();\n    for (var name in gizmoMap) {\n      for (var i = gizmoMap[name].length; i--;) {\n        var object = gizmoMap[name][i][0].clone();\n        var position = gizmoMap[name][i][1];\n        var rotation = gizmoMap[name][i][2];\n        var scale = gizmoMap[name][i][3];\n        var tag = gizmoMap[name][i][4];\n\n        // name and tag properties are essential for picking and updating logic.\n        object.name = name;\n        object.tag = tag;\n        if (position) {\n          object.position.set(position[0], position[1], position[2]);\n        }\n        if (rotation) {\n          object.rotation.set(rotation[0], rotation[1], rotation[2]);\n        }\n        if (scale) {\n          object.scale.set(scale[0], scale[1], scale[2]);\n        }\n        object.updateMatrix();\n        var tempGeometry = object.geometry.clone();\n        tempGeometry.applyMatrix4(object.matrix);\n        object.geometry = tempGeometry;\n        object.renderOrder = Infinity;\n        object.position.set(0, 0, 0);\n        object.rotation.set(0, 0, 0);\n        object.scale.set(1, 1, 1);\n        gizmo.add(object);\n      }\n    }\n    return gizmo;\n  };\n\n  // Reusable utility variables\n\n  var tempVector = new Vector3(0, 0, 0);\n  var tempEuler = new Euler();\n  var alignVector = new Vector3(0, 1, 0);\n  var zeroVector = new Vector3(0, 0, 0);\n  var lookAtMatrix = new Matrix4();\n  var tempQuaternion = new Quaternion();\n  var tempQuaternion2 = new Quaternion();\n  var identityQuaternion = new Quaternion();\n  var unitX = new Vector3(1, 0, 0);\n  var unitY = new Vector3(0, 1, 0);\n  var unitZ = new Vector3(0, 0, 1);\n\n  // Gizmo creation\n\n  this.gizmo = {};\n  this.picker = {};\n  this.helper = {};\n  this.add(this.gizmo[\"translate\"] = setupGizmo(gizmoTranslate));\n  this.add(this.gizmo[\"rotate\"] = setupGizmo(gizmoRotate));\n  this.add(this.gizmo[\"scale\"] = setupGizmo(gizmoScale));\n  this.add(this.picker[\"translate\"] = setupGizmo(pickerTranslate));\n  this.add(this.picker[\"rotate\"] = setupGizmo(pickerRotate));\n  this.add(this.picker[\"scale\"] = setupGizmo(pickerScale));\n  this.add(this.helper[\"translate\"] = setupGizmo(helperTranslate));\n  this.add(this.helper[\"rotate\"] = setupGizmo(helperRotate));\n  this.add(this.helper[\"scale\"] = setupGizmo(helperScale));\n\n  // Pickers should be hidden always\n\n  this.picker[\"translate\"].visible = false;\n  this.picker[\"rotate\"].visible = false;\n  this.picker[\"scale\"].visible = false;\n\n  // updateMatrixWorld will update transformations and appearance of individual handles\n\n  this.updateMatrixWorld = function () {\n    var space = this.space;\n    if (this.mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n    var quaternion = space === \"local\" ? this.worldQuaternion : identityQuaternion;\n\n    // Show only gizmos for current transform mode\n\n    this.gizmo[\"translate\"].visible = this.mode === \"translate\";\n    this.gizmo[\"rotate\"].visible = this.mode === \"rotate\";\n    this.gizmo[\"scale\"].visible = this.mode === \"scale\";\n    this.helper[\"translate\"].visible = this.mode === \"translate\";\n    this.helper[\"rotate\"].visible = this.mode === \"rotate\";\n    this.helper[\"scale\"].visible = this.mode === \"scale\";\n    var handles = [];\n    handles = handles.concat(this.picker[this.mode].children);\n    handles = handles.concat(this.gizmo[this.mode].children);\n    handles = handles.concat(this.helper[this.mode].children);\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      // hide aligned to camera\n\n      handle.visible = true;\n      handle.rotation.set(0, 0, 0);\n      handle.position.copy(this.worldPosition);\n      var factor;\n      if (this.camera.isOrthographicCamera) {\n        factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n      } else {\n        factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n      }\n      handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 7);\n\n      // TODO: simplify helpers and consider decoupling from gizmo\n\n      if (handle.tag === 'helper') {\n        handle.visible = false;\n        if (handle.name === 'AXIS') {\n          handle.position.copy(this.worldPositionStart);\n          handle.visible = !!this.axis;\n          if (this.axis === 'X') {\n            tempQuaternion.setFromEuler(tempEuler.set(0, 0, 0));\n            handle.quaternion.copy(quaternion).multiply(tempQuaternion);\n            if (Math.abs(alignVector.copy(unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === 'Y') {\n            tempQuaternion.setFromEuler(tempEuler.set(0, 0, Math.PI / 2));\n            handle.quaternion.copy(quaternion).multiply(tempQuaternion);\n            if (Math.abs(alignVector.copy(unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === 'Z') {\n            tempQuaternion.setFromEuler(tempEuler.set(0, Math.PI / 2, 0));\n            handle.quaternion.copy(quaternion).multiply(tempQuaternion);\n            if (Math.abs(alignVector.copy(unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n              handle.visible = false;\n            }\n          }\n          if (this.axis === 'XYZE') {\n            tempQuaternion.setFromEuler(tempEuler.set(0, Math.PI / 2, 0));\n            alignVector.copy(this.rotationAxis);\n            handle.quaternion.setFromRotationMatrix(lookAtMatrix.lookAt(zeroVector, alignVector, unitY));\n            handle.quaternion.multiply(tempQuaternion);\n            handle.visible = this.dragging;\n          }\n          if (this.axis === 'E') {\n            handle.visible = false;\n          }\n        } else if (handle.name === 'START') {\n          handle.position.copy(this.worldPositionStart);\n          handle.visible = this.dragging;\n        } else if (handle.name === 'END') {\n          handle.position.copy(this.worldPosition);\n          handle.visible = this.dragging;\n        } else if (handle.name === 'DELTA') {\n          handle.position.copy(this.worldPositionStart);\n          handle.quaternion.copy(this.worldQuaternionStart);\n          tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n          tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n          handle.scale.copy(tempVector);\n          handle.visible = this.dragging;\n        } else {\n          handle.quaternion.copy(quaternion);\n          if (this.dragging) {\n            handle.position.copy(this.worldPositionStart);\n          } else {\n            handle.position.copy(this.worldPosition);\n          }\n          if (this.axis) {\n            handle.visible = this.axis.search(handle.name) !== -1;\n          }\n        }\n\n        // If updating helper, skip rest of the loop\n        continue;\n      }\n\n      // Align handles to current local or world rotation\n\n      handle.quaternion.copy(quaternion);\n      if (this.mode === 'translate' || this.mode === 'scale') {\n        // Hide translate and scale axis facing the camera\n\n        var AXIS_HIDE_TRESHOLD = 0.99;\n        var PLANE_HIDE_TRESHOLD = 0.2;\n        var AXIS_FLIP_TRESHOLD = 0.0;\n        if (handle.name === 'X' || handle.name === 'XYZX') {\n          if (Math.abs(alignVector.copy(unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'Y' || handle.name === 'XYZY') {\n          if (Math.abs(alignVector.copy(unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'Z' || handle.name === 'XYZZ') {\n          if (Math.abs(alignVector.copy(unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'XY') {\n          if (Math.abs(alignVector.copy(unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'YZ') {\n          if (Math.abs(alignVector.copy(unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n        if (handle.name === 'XZ') {\n          if (Math.abs(alignVector.copy(unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n            handle.scale.set(1e-10, 1e-10, 1e-10);\n            handle.visible = false;\n          }\n        }\n\n        // Flip translate and scale axis ocluded behind another axis\n\n        if (handle.name.search('X') !== -1) {\n          if (alignVector.copy(unitX).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n            if (handle.tag === 'fwd') {\n              handle.visible = false;\n            } else {\n              handle.scale.x *= -1;\n            }\n          } else if (handle.tag === 'bwd') {\n            handle.visible = false;\n          }\n        }\n        if (handle.name.search('Y') !== -1) {\n          if (alignVector.copy(unitY).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n            if (handle.tag === 'fwd') {\n              handle.visible = false;\n            } else {\n              handle.scale.y *= -1;\n            }\n          } else if (handle.tag === 'bwd') {\n            handle.visible = false;\n          }\n        }\n        if (handle.name.search('Z') !== -1) {\n          if (alignVector.copy(unitZ).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n            if (handle.tag === 'fwd') {\n              handle.visible = false;\n            } else {\n              handle.scale.z *= -1;\n            }\n          } else if (handle.tag === 'bwd') {\n            handle.visible = false;\n          }\n        }\n      } else if (this.mode === 'rotate') {\n        // Align handles to current local or world rotation\n\n        tempQuaternion2.copy(quaternion);\n        alignVector.copy(this.eye).applyQuaternion(tempQuaternion.copy(quaternion).invert());\n        if (handle.name.search(\"E\") !== -1) {\n          handle.quaternion.setFromRotationMatrix(lookAtMatrix.lookAt(this.eye, zeroVector, unitY));\n        }\n        if (handle.name === 'X') {\n          tempQuaternion.setFromAxisAngle(unitX, Math.atan2(-alignVector.y, alignVector.z));\n          tempQuaternion.multiplyQuaternions(tempQuaternion2, tempQuaternion);\n          handle.quaternion.copy(tempQuaternion);\n        }\n        if (handle.name === 'Y') {\n          tempQuaternion.setFromAxisAngle(unitY, Math.atan2(alignVector.x, alignVector.z));\n          tempQuaternion.multiplyQuaternions(tempQuaternion2, tempQuaternion);\n          handle.quaternion.copy(tempQuaternion);\n        }\n        if (handle.name === 'Z') {\n          tempQuaternion.setFromAxisAngle(unitZ, Math.atan2(alignVector.y, alignVector.x));\n          tempQuaternion.multiplyQuaternions(tempQuaternion2, tempQuaternion);\n          handle.quaternion.copy(tempQuaternion);\n        }\n      }\n\n      // Hide disabled axes\n      handle.visible = handle.visible && (handle.name.indexOf(\"X\") === -1 || this.showX);\n      handle.visible = handle.visible && (handle.name.indexOf(\"Y\") === -1 || this.showY);\n      handle.visible = handle.visible && (handle.name.indexOf(\"Z\") === -1 || this.showZ);\n      handle.visible = handle.visible && (handle.name.indexOf(\"E\") === -1 || this.showX && this.showY && this.showZ);\n\n      // highlight selected axis\n\n      handle.material._opacity = handle.material._opacity || handle.material.opacity;\n      handle.material._color = handle.material._color || handle.material.color.clone();\n      handle.material.color.copy(handle.material._color);\n      handle.material.opacity = handle.material._opacity;\n      if (!this.enabled) {\n        handle.material.opacity *= 0.5;\n        handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n      } else if (this.axis) {\n        if (handle.name === this.axis) {\n          handle.material.opacity = 1.0;\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this.axis.split('').some(function (a) {\n          return handle.name === a;\n        })) {\n          handle.material.opacity = 1.0;\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else {\n          handle.material.opacity *= 0.25;\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        }\n      }\n    }\n    Object3D.prototype.updateMatrixWorld.call(this);\n  };\n};\nTransformControlsGizmo.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: TransformControlsGizmo,\n  isTransformControlsGizmo: true\n});\nvar TransformControlsPlane = function TransformControlsPlane() {\n  'use strict';\n\n  Mesh.call(this, new PlaneBufferGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n    visible: false,\n    wireframe: true,\n    side: DoubleSide,\n    transparent: true,\n    opacity: 0.1,\n    toneMapped: false\n  }));\n  this.type = 'TransformControlsPlane';\n  var unitX = new Vector3(1, 0, 0);\n  var unitY = new Vector3(0, 1, 0);\n  var unitZ = new Vector3(0, 0, 1);\n  var tempVector = new Vector3();\n  var dirVector = new Vector3();\n  var alignVector = new Vector3();\n  var tempMatrix = new Matrix4();\n  var identityQuaternion = new Quaternion();\n  this.updateMatrixWorld = function () {\n    var space = this.space;\n    this.position.copy(this.worldPosition);\n    if (this.mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n    unitX.set(1, 0, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : identityQuaternion);\n    unitY.set(0, 1, 0).applyQuaternion(space === \"local\" ? this.worldQuaternion : identityQuaternion);\n    unitZ.set(0, 0, 1).applyQuaternion(space === \"local\" ? this.worldQuaternion : identityQuaternion);\n\n    // Align the plane for current transform mode, axis and space.\n\n    alignVector.copy(unitY);\n    switch (this.mode) {\n      case 'translate':\n      case 'scale':\n        switch (this.axis) {\n          case 'X':\n            alignVector.copy(this.eye).cross(unitX);\n            dirVector.copy(unitX).cross(alignVector);\n            break;\n          case 'Y':\n            alignVector.copy(this.eye).cross(unitY);\n            dirVector.copy(unitY).cross(alignVector);\n            break;\n          case 'Z':\n            alignVector.copy(this.eye).cross(unitZ);\n            dirVector.copy(unitZ).cross(alignVector);\n            break;\n          case 'XY':\n            dirVector.copy(unitZ);\n            break;\n          case 'YZ':\n            dirVector.copy(unitX);\n            break;\n          case 'XZ':\n            alignVector.copy(unitZ);\n            dirVector.copy(unitY);\n            break;\n          case 'XYZ':\n          case 'E':\n            dirVector.set(0, 0, 0);\n            break;\n        }\n        break;\n      case 'rotate':\n      default:\n        // special case for rotate\n        dirVector.set(0, 0, 0);\n    }\n    if (dirVector.length() === 0) {\n      // If in rotate mode, make the plane parallel to camera\n      this.quaternion.copy(this.cameraQuaternion);\n    } else {\n      tempMatrix.lookAt(tempVector.set(0, 0, 0), dirVector, alignVector);\n      this.quaternion.setFromRotationMatrix(tempMatrix);\n    }\n    Object3D.prototype.updateMatrixWorld.call(this);\n  };\n};\nTransformControlsPlane.prototype = Object.assign(Object.create(Mesh.prototype), {\n  constructor: TransformControlsPlane,\n  isTransformControlsPlane: true\n});\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };","map":{"version":3,"names":["BoxBufferGeometry","BufferGeometry","Color","CylinderBufferGeometry","DoubleSide","Euler","Float32BufferAttribute","Line","LineBasicMaterial","Matrix4","Mesh","MeshBasicMaterial","Object3D","OctahedronBufferGeometry","PlaneBufferGeometry","Quaternion","Raycaster","SphereBufferGeometry","TorusBufferGeometry","Vector3","TransformControls","camera","domElement","undefined","console","warn","document","call","visible","_gizmo","TransformControlsGizmo","add","_plane","TransformControlsPlane","scope","defineProperty","changeEvent","type","mouseDownEvent","mouseUpEvent","mode","objectChangeEvent","raycaster","intersectObjectWithRay","object","includeInvisible","allIntersections","intersectObject","i","length","_tempVector","_tempVector2","_tempQuaternion","_unit","X","Y","Z","pointStart","pointEnd","offset","rotationAxis","startNorm","endNorm","rotationAngle","cameraPosition","cameraQuaternion","cameraScale","parentPosition","parentQuaternion","parentQuaternionInv","parentScale","worldPositionStart","worldQuaternionStart","worldScaleStart","worldPosition","worldQuaternion","worldQuaternionInv","worldScale","eye","positionStart","quaternionStart","scaleStart","addEventListener","onPointerDown","onPointerHover","ownerDocument","onPointerUp","dispose","removeEventListener","onPointerMove","traverse","child","geometry","material","attach","detach","axis","propName","defaultValue","propValue","Object","get","set","value","dispatchEvent","updateMatrixWorld","parent","error","matrixWorld","decompose","copy","invert","sub","normalize","prototype","pointerHover","pointer","dragging","setFromCamera","intersect","picker","name","pointerDown","button","planeIntersect","space","snap","rotationSnap","rotation","x","Math","round","y","z","position","quaternion","scale","point","pointerMove","applyQuaternion","indexOf","divide","translationSnap","search","setFromMatrixPosition","d","dot","multiply","scaleSnap","ROTATION_SPEED","distanceTo","angleTo","cross","setFromAxisAngle","pointerUp","getPointer","event","pointerLockElement","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","enabled","pointerType","style","touchAction","getMode","setMode","setTranslationSnap","setRotationSnap","setScaleSnap","setSize","size","setSpace","update","assign","create","constructor","isTransformControls","gizmoMaterial","depthTest","depthWrite","transparent","side","fog","toneMapped","gizmoLineMaterial","linewidth","matInvisible","clone","opacity","matHelper","matRed","color","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matYellow","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","scaleHandleGeometry","lineGeometry","setAttribute","CircleGeometry","radius","arc","vertices","push","cos","PI","sin","TranslateHelperGeometry","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","gizmo","tag","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","tempVector","tempEuler","alignVector","zeroVector","lookAtMatrix","tempQuaternion","tempQuaternion2","identityQuaternion","unitX","unitY","unitZ","helper","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","fov","multiplyScalar","setFromEuler","abs","setFromRotationMatrix","lookAt","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","AXIS_FLIP_TRESHOLD","atan2","multiplyQuaternions","showX","showY","showZ","_opacity","_color","lerp","split","some","a","isTransformControlsGizmo","wireframe","dirVector","tempMatrix","isTransformControlsPlane"],"sources":["/Users/Aaron/Desktop/mirrorsReactThreeFiber/node_modules/three/examples/jsm/controls/TransformControls.js"],"sourcesContent":["import {\n\tBoxBufferGeometry,\n\tBufferGeometry,\n\tColor,\n\tCylinderBufferGeometry,\n\tDoubleSide,\n\tEuler,\n\tFloat32BufferAttribute,\n\tLine,\n\tLineBasicMaterial,\n\tMatrix4,\n\tMesh,\n\tMeshBasicMaterial,\n\tObject3D,\n\tOctahedronBufferGeometry,\n\tPlaneBufferGeometry,\n\tQuaternion,\n\tRaycaster,\n\tSphereBufferGeometry,\n\tTorusBufferGeometry,\n\tVector3\n} from \"../../../build/three.module.js\";\n\nvar TransformControls = function ( camera, domElement ) {\n\n\tif ( domElement === undefined ) {\n\n\t\tconsole.warn( 'THREE.TransformControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tdomElement = document;\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.visible = false;\n\tthis.domElement = domElement;\n\n\tvar _gizmo = new TransformControlsGizmo();\n\tthis.add( _gizmo );\n\n\tvar _plane = new TransformControlsPlane();\n\tthis.add( _plane );\n\n\tvar scope = this;\n\n\t// Define properties with getters/setter\n\t// Setting the defined property will automatically trigger change event\n\t// Defined properties are passed down to gizmo and plane\n\n\tdefineProperty( \"camera\", camera );\n\tdefineProperty( \"object\", undefined );\n\tdefineProperty( \"enabled\", true );\n\tdefineProperty( \"axis\", null );\n\tdefineProperty( \"mode\", \"translate\" );\n\tdefineProperty( \"translationSnap\", null );\n\tdefineProperty( \"rotationSnap\", null );\n\tdefineProperty( \"scaleSnap\", null );\n\tdefineProperty( \"space\", \"world\" );\n\tdefineProperty( \"size\", 1 );\n\tdefineProperty( \"dragging\", false );\n\tdefineProperty( \"showX\", true );\n\tdefineProperty( \"showY\", true );\n\tdefineProperty( \"showZ\", true );\n\n\tvar changeEvent = { type: \"change\" };\n\tvar mouseDownEvent = { type: \"mouseDown\" };\n\tvar mouseUpEvent = { type: \"mouseUp\", mode: scope.mode };\n\tvar objectChangeEvent = { type: \"objectChange\" };\n\n\t// Reusable utility variables\n\n\tvar raycaster = new Raycaster();\n\n\tfunction intersectObjectWithRay( object, raycaster, includeInvisible ) {\n\n\t\tvar allIntersections = raycaster.intersectObject( object, true );\n\n\t\tfor ( var i = 0; i < allIntersections.length; i ++ ) {\n\n\t\t\tif ( allIntersections[ i ].object.visible || includeInvisible ) {\n\n\t\t\t\treturn allIntersections[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tvar _tempVector = new Vector3();\n\tvar _tempVector2 = new Vector3();\n\tvar _tempQuaternion = new Quaternion();\n\tvar _unit = {\n\t\tX: new Vector3( 1, 0, 0 ),\n\t\tY: new Vector3( 0, 1, 0 ),\n\t\tZ: new Vector3( 0, 0, 1 )\n\t};\n\n\tvar pointStart = new Vector3();\n\tvar pointEnd = new Vector3();\n\tvar offset = new Vector3();\n\tvar rotationAxis = new Vector3();\n\tvar startNorm = new Vector3();\n\tvar endNorm = new Vector3();\n\tvar rotationAngle = 0;\n\n\tvar cameraPosition = new Vector3();\n\tvar cameraQuaternion = new Quaternion();\n\tvar cameraScale = new Vector3();\n\n\tvar parentPosition = new Vector3();\n\tvar parentQuaternion = new Quaternion();\n\tvar parentQuaternionInv = new Quaternion();\n\tvar parentScale = new Vector3();\n\n\tvar worldPositionStart = new Vector3();\n\tvar worldQuaternionStart = new Quaternion();\n\tvar worldScaleStart = new Vector3();\n\n\tvar worldPosition = new Vector3();\n\tvar worldQuaternion = new Quaternion();\n\tvar worldQuaternionInv = new Quaternion();\n\tvar worldScale = new Vector3();\n\n\tvar eye = new Vector3();\n\n\tvar positionStart = new Vector3();\n\tvar quaternionStart = new Quaternion();\n\tvar scaleStart = new Vector3();\n\n\t// TODO: remove properties unused in plane and gizmo\n\n\tdefineProperty( \"worldPosition\", worldPosition );\n\tdefineProperty( \"worldPositionStart\", worldPositionStart );\n\tdefineProperty( \"worldQuaternion\", worldQuaternion );\n\tdefineProperty( \"worldQuaternionStart\", worldQuaternionStart );\n\tdefineProperty( \"cameraPosition\", cameraPosition );\n\tdefineProperty( \"cameraQuaternion\", cameraQuaternion );\n\tdefineProperty( \"pointStart\", pointStart );\n\tdefineProperty( \"pointEnd\", pointEnd );\n\tdefineProperty( \"rotationAxis\", rotationAxis );\n\tdefineProperty( \"rotationAngle\", rotationAngle );\n\tdefineProperty( \"eye\", eye );\n\n\t{\n\n\t\tdomElement.addEventListener( \"pointerdown\", onPointerDown, false );\n\t\tdomElement.addEventListener( \"pointermove\", onPointerHover, false );\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointerup\", onPointerUp, false );\n\n\t}\n\n\tthis.dispose = function () {\n\n\t\tdomElement.removeEventListener( \"pointerdown\", onPointerDown );\n\t\tdomElement.removeEventListener( \"pointermove\", onPointerHover );\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove );\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointerup\", onPointerUp );\n\n\t\tthis.traverse( function ( child ) {\n\n\t\t\tif ( child.geometry ) child.geometry.dispose();\n\t\t\tif ( child.material ) child.material.dispose();\n\n\t\t} );\n\n\t};\n\n\t// Set current object\n\tthis.attach = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.visible = true;\n\n\t\treturn this;\n\n\t};\n\n\t// Detatch from object\n\tthis.detach = function () {\n\n\t\tthis.object = undefined;\n\t\tthis.visible = false;\n\t\tthis.axis = null;\n\n\t\treturn this;\n\n\t};\n\n\t// Defined getter, setter and store for a property\n\tfunction defineProperty( propName, defaultValue ) {\n\n\t\tvar propValue = defaultValue;\n\n\t\tObject.defineProperty( scope, propName, {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn propValue !== undefined ? propValue : defaultValue;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tif ( propValue !== value ) {\n\n\t\t\t\t\tpropValue = value;\n\t\t\t\t\t_plane[ propName ] = value;\n\t\t\t\t\t_gizmo[ propName ] = value;\n\n\t\t\t\t\tscope.dispatchEvent( { type: propName + \"-changed\", value: value } );\n\t\t\t\t\tscope.dispatchEvent( changeEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tscope[ propName ] = defaultValue;\n\t\t_plane[ propName ] = defaultValue;\n\t\t_gizmo[ propName ] = defaultValue;\n\n\t}\n\n\t// updateMatrixWorld  updates key transformation variables\n\tthis.updateMatrixWorld = function () {\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\tif ( this.object.parent === null ) {\n\n\t\t\t\tconsole.error( 'TransformControls: The attached 3D object must be a part of the scene graph.' );\n\n\t\t\t} else {\n\n\t\t\t\tthis.object.parent.matrixWorld.decompose( parentPosition, parentQuaternion, parentScale );\n\n\t\t\t}\n\n\t\t\tthis.object.matrixWorld.decompose( worldPosition, worldQuaternion, worldScale );\n\n\t\t\tparentQuaternionInv.copy( parentQuaternion ).invert();\n\t\t\tworldQuaternionInv.copy( worldQuaternion ).invert();\n\n\t\t}\n\n\t\tthis.camera.updateMatrixWorld();\n\t\tthis.camera.matrixWorld.decompose( cameraPosition, cameraQuaternion, cameraScale );\n\n\t\teye.copy( cameraPosition ).sub( worldPosition ).normalize();\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\n\n\t};\n\n\tthis.pointerHover = function ( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true ) return;\n\n\t\traycaster.setFromCamera( pointer, this.camera );\n\n\t\tvar intersect = intersectObjectWithRay( _gizmo.picker[ this.mode ], raycaster );\n\n\t\tif ( intersect ) {\n\n\t\t\tthis.axis = intersect.object.name;\n\n\t\t} else {\n\n\t\t\tthis.axis = null;\n\n\t\t}\n\n\t};\n\n\tthis.pointerDown = function ( pointer ) {\n\n\t\tif ( this.object === undefined || this.dragging === true || pointer.button !== 0 ) return;\n\n\t\tif ( this.axis !== null ) {\n\n\t\t\traycaster.setFromCamera( pointer, this.camera );\n\n\t\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\n\n\t\t\tif ( planeIntersect ) {\n\n\t\t\t\tvar space = this.space;\n\n\t\t\t\tif ( this.mode === 'scale' ) {\n\n\t\t\t\t\tspace = 'local';\n\n\t\t\t\t} else if ( this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ' ) {\n\n\t\t\t\t\tspace = 'world';\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'local' && this.mode === 'rotate' ) {\n\n\t\t\t\t\tvar snap = this.rotationSnap;\n\n\t\t\t\t\tif ( this.axis === 'X' && snap ) this.object.rotation.x = Math.round( this.object.rotation.x / snap ) * snap;\n\t\t\t\t\tif ( this.axis === 'Y' && snap ) this.object.rotation.y = Math.round( this.object.rotation.y / snap ) * snap;\n\t\t\t\t\tif ( this.axis === 'Z' && snap ) this.object.rotation.z = Math.round( this.object.rotation.z / snap ) * snap;\n\n\t\t\t\t}\n\n\t\t\t\tthis.object.updateMatrixWorld();\n\t\t\t\tthis.object.parent.updateMatrixWorld();\n\n\t\t\t\tpositionStart.copy( this.object.position );\n\t\t\t\tquaternionStart.copy( this.object.quaternion );\n\t\t\t\tscaleStart.copy( this.object.scale );\n\n\t\t\t\tthis.object.matrixWorld.decompose( worldPositionStart, worldQuaternionStart, worldScaleStart );\n\n\t\t\t\tpointStart.copy( planeIntersect.point ).sub( worldPositionStart );\n\n\t\t\t}\n\n\t\t\tthis.dragging = true;\n\t\t\tmouseDownEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( mouseDownEvent );\n\n\t\t}\n\n\t};\n\n\tthis.pointerMove = function ( pointer ) {\n\n\t\tvar axis = this.axis;\n\t\tvar mode = this.mode;\n\t\tvar object = this.object;\n\t\tvar space = this.space;\n\n\t\tif ( mode === 'scale' ) {\n\n\t\t\tspace = 'local';\n\n\t\t} else if ( axis === 'E' || axis === 'XYZE' || axis === 'XYZ' ) {\n\n\t\t\tspace = 'world';\n\n\t\t}\n\n\t\tif ( object === undefined || axis === null || this.dragging === false || pointer.button !== - 1 ) return;\n\n\t\traycaster.setFromCamera( pointer, this.camera );\n\n\t\tvar planeIntersect = intersectObjectWithRay( _plane, raycaster, true );\n\n\t\tif ( ! planeIntersect ) return;\n\n\t\tpointEnd.copy( planeIntersect.point ).sub( worldPositionStart );\n\n\t\tif ( mode === 'translate' ) {\n\n\t\t\t// Apply translate\n\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\toffset.applyQuaternion( worldQuaternionInv );\n\n\t\t\t}\n\n\t\t\tif ( axis.indexOf( 'X' ) === - 1 ) offset.x = 0;\n\t\t\tif ( axis.indexOf( 'Y' ) === - 1 ) offset.y = 0;\n\t\t\tif ( axis.indexOf( 'Z' ) === - 1 ) offset.z = 0;\n\n\t\t\tif ( space === 'local' && axis !== 'XYZ' ) {\n\n\t\t\t\toffset.applyQuaternion( quaternionStart ).divide( parentScale );\n\n\t\t\t} else {\n\n\t\t\t\toffset.applyQuaternion( parentQuaternionInv ).divide( parentScale );\n\n\t\t\t}\n\n\t\t\tobject.position.copy( offset ).add( positionStart );\n\n\t\t\t// Apply translation snap\n\n\t\t\tif ( this.translationSnap ) {\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\tobject.position.applyQuaternion( _tempQuaternion.copy( quaternionStart ).invert() );\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.position.applyQuaternion( quaternionStart );\n\n\t\t\t\t}\n\n\t\t\t\tif ( space === 'world' ) {\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.add( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.x = Math.round( object.position.x / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.y = Math.round( object.position.y / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\t\tobject.position.z = Math.round( object.position.z / this.translationSnap ) * this.translationSnap;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( object.parent ) {\n\n\t\t\t\t\t\tobject.position.sub( _tempVector.setFromMatrixPosition( object.parent.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'scale' ) {\n\n\t\t\tif ( axis.search( 'XYZ' ) !== - 1 ) {\n\n\t\t\t\tvar d = pointEnd.length() / pointStart.length();\n\n\t\t\t\tif ( pointEnd.dot( pointStart ) < 0 ) d *= - 1;\n\n\t\t\t\t_tempVector2.set( d, d, d );\n\n\t\t\t} else {\n\n\t\t\t\t_tempVector.copy( pointStart );\n\t\t\t\t_tempVector2.copy( pointEnd );\n\n\t\t\t\t_tempVector.applyQuaternion( worldQuaternionInv );\n\t\t\t\t_tempVector2.applyQuaternion( worldQuaternionInv );\n\n\t\t\t\t_tempVector2.divide( _tempVector );\n\n\t\t\t\tif ( axis.search( 'X' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.x = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.y = 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) === - 1 ) {\n\n\t\t\t\t\t_tempVector2.z = 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Apply scale\n\n\t\t\tobject.scale.copy( scaleStart ).multiply( _tempVector2 );\n\n\t\t\tif ( this.scaleSnap ) {\n\n\t\t\t\tif ( axis.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.x = Math.round( object.scale.x / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.y = Math.round( object.scale.y / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( axis.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tobject.scale.z = Math.round( object.scale.z / this.scaleSnap ) * this.scaleSnap || this.scaleSnap;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( mode === 'rotate' ) {\n\n\t\t\toffset.copy( pointEnd ).sub( pointStart );\n\n\t\t\tvar ROTATION_SPEED = 20 / worldPosition.distanceTo( _tempVector.setFromMatrixPosition( this.camera.matrixWorld ) );\n\n\t\t\tif ( axis === 'E' ) {\n\n\t\t\t\trotationAxis.copy( eye );\n\t\t\t\trotationAngle = pointEnd.angleTo( pointStart );\n\n\t\t\t\tstartNorm.copy( pointStart ).normalize();\n\t\t\t\tendNorm.copy( pointEnd ).normalize();\n\n\t\t\t\trotationAngle *= ( endNorm.cross( startNorm ).dot( eye ) < 0 ? 1 : - 1 );\n\n\t\t\t} else if ( axis === 'XYZE' ) {\n\n\t\t\t\trotationAxis.copy( offset ).cross( eye ).normalize();\n\t\t\t\trotationAngle = offset.dot( _tempVector.copy( rotationAxis ).cross( this.eye ) ) * ROTATION_SPEED;\n\n\t\t\t} else if ( axis === 'X' || axis === 'Y' || axis === 'Z' ) {\n\n\t\t\t\trotationAxis.copy( _unit[ axis ] );\n\n\t\t\t\t_tempVector.copy( _unit[ axis ] );\n\n\t\t\t\tif ( space === 'local' ) {\n\n\t\t\t\t\t_tempVector.applyQuaternion( worldQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\trotationAngle = offset.dot( _tempVector.cross( eye ).normalize() ) * ROTATION_SPEED;\n\n\t\t\t}\n\n\t\t\t// Apply rotation snap\n\n\t\t\tif ( this.rotationSnap ) rotationAngle = Math.round( rotationAngle / this.rotationSnap ) * this.rotationSnap;\n\n\t\t\tthis.rotationAngle = rotationAngle;\n\n\t\t\t// Apply rotate\n\t\t\tif ( space === 'local' && axis !== 'E' && axis !== 'XYZE' ) {\n\n\t\t\t\tobject.quaternion.copy( quaternionStart );\n\t\t\t\tobject.quaternion.multiply( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) ).normalize();\n\n\t\t\t} else {\n\n\t\t\t\trotationAxis.applyQuaternion( parentQuaternionInv );\n\t\t\t\tobject.quaternion.copy( _tempQuaternion.setFromAxisAngle( rotationAxis, rotationAngle ) );\n\t\t\t\tobject.quaternion.multiply( quaternionStart ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( changeEvent );\n\t\tthis.dispatchEvent( objectChangeEvent );\n\n\t};\n\n\tthis.pointerUp = function ( pointer ) {\n\n\t\tif ( pointer.button !== 0 ) return;\n\n\t\tif ( this.dragging && ( this.axis !== null ) ) {\n\n\t\t\tmouseUpEvent.mode = this.mode;\n\t\t\tthis.dispatchEvent( mouseUpEvent );\n\n\t\t}\n\n\t\tthis.dragging = false;\n\t\tthis.axis = null;\n\n\t};\n\n\t// normalize mouse / touch pointer and remap {x,y} to view space.\n\n\tfunction getPointer( event ) {\n\n\t\tif ( scope.domElement.ownerDocument.pointerLockElement ) {\n\n\t\t\treturn {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\tbutton: event.button\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tvar pointer = event.changedTouches ? event.changedTouches[ 0 ] : event;\n\n\t\t\tvar rect = domElement.getBoundingClientRect();\n\n\t\t\treturn {\n\t\t\t\tx: ( pointer.clientX - rect.left ) / rect.width * 2 - 1,\n\t\t\t\ty: - ( pointer.clientY - rect.top ) / rect.height * 2 + 1,\n\t\t\t\tbutton: event.button\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// mouse / touch event handlers\n\n\tfunction onPointerHover( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tswitch ( event.pointerType ) {\n\n\t\t\tcase 'mouse':\n\t\t\tcase 'pen':\n\t\t\t\tscope.pointerHover( getPointer( event ) );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction onPointerDown( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tscope.domElement.style.touchAction = 'none'; // disable touch scroll\n\t\tscope.domElement.ownerDocument.addEventListener( \"pointermove\", onPointerMove, false );\n\n\t\tscope.pointerHover( getPointer( event ) );\n\t\tscope.pointerDown( getPointer( event ) );\n\n\t}\n\n\tfunction onPointerMove( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tscope.pointerMove( getPointer( event ) );\n\n\t}\n\n\tfunction onPointerUp( event ) {\n\n\t\tif ( ! scope.enabled ) return;\n\n\t\tscope.domElement.style.touchAction = '';\n\t\tscope.domElement.ownerDocument.removeEventListener( \"pointermove\", onPointerMove, false );\n\n\t\tscope.pointerUp( getPointer( event ) );\n\n\t}\n\n\t// TODO: deprecate\n\n\tthis.getMode = function () {\n\n\t\treturn scope.mode;\n\n\t};\n\n\tthis.setMode = function ( mode ) {\n\n\t\tscope.mode = mode;\n\n\t};\n\n\tthis.setTranslationSnap = function ( translationSnap ) {\n\n\t\tscope.translationSnap = translationSnap;\n\n\t};\n\n\tthis.setRotationSnap = function ( rotationSnap ) {\n\n\t\tscope.rotationSnap = rotationSnap;\n\n\t};\n\n\tthis.setScaleSnap = function ( scaleSnap ) {\n\n\t\tscope.scaleSnap = scaleSnap;\n\n\t};\n\n\tthis.setSize = function ( size ) {\n\n\t\tscope.size = size;\n\n\t};\n\n\tthis.setSpace = function ( space ) {\n\n\t\tscope.space = space;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tconsole.warn( 'THREE.TransformControls: update function has no more functionality and therefore has been deprecated.' );\n\n\t};\n\n};\n\nTransformControls.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: TransformControls,\n\n\tisTransformControls: true\n\n} );\n\n\nvar TransformControlsGizmo = function () {\n\n\t'use strict';\n\n\tObject3D.call( this );\n\n\tthis.type = 'TransformControlsGizmo';\n\n\t// shared materials\n\n\tvar gizmoMaterial = new MeshBasicMaterial( {\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true,\n\t\tside: DoubleSide,\n\t\tfog: false,\n\t\ttoneMapped: false\n\t} );\n\n\tvar gizmoLineMaterial = new LineBasicMaterial( {\n\t\tdepthTest: false,\n\t\tdepthWrite: false,\n\t\ttransparent: true,\n\t\tlinewidth: 1,\n\t\tfog: false,\n\t\ttoneMapped: false\n\t} );\n\n\t// Make unique material for each axis/color\n\n\tvar matInvisible = gizmoMaterial.clone();\n\tmatInvisible.opacity = 0.15;\n\n\tvar matHelper = gizmoMaterial.clone();\n\tmatHelper.opacity = 0.33;\n\n\tvar matRed = gizmoMaterial.clone();\n\tmatRed.color.set( 0xff0000 );\n\n\tvar matGreen = gizmoMaterial.clone();\n\tmatGreen.color.set( 0x00ff00 );\n\n\tvar matBlue = gizmoMaterial.clone();\n\tmatBlue.color.set( 0x0000ff );\n\n\tvar matWhiteTransparent = gizmoMaterial.clone();\n\tmatWhiteTransparent.opacity = 0.25;\n\n\tvar matYellowTransparent = matWhiteTransparent.clone();\n\tmatYellowTransparent.color.set( 0xffff00 );\n\n\tvar matCyanTransparent = matWhiteTransparent.clone();\n\tmatCyanTransparent.color.set( 0x00ffff );\n\n\tvar matMagentaTransparent = matWhiteTransparent.clone();\n\tmatMagentaTransparent.color.set( 0xff00ff );\n\n\tvar matYellow = gizmoMaterial.clone();\n\tmatYellow.color.set( 0xffff00 );\n\n\tvar matLineRed = gizmoLineMaterial.clone();\n\tmatLineRed.color.set( 0xff0000 );\n\n\tvar matLineGreen = gizmoLineMaterial.clone();\n\tmatLineGreen.color.set( 0x00ff00 );\n\n\tvar matLineBlue = gizmoLineMaterial.clone();\n\tmatLineBlue.color.set( 0x0000ff );\n\n\tvar matLineCyan = gizmoLineMaterial.clone();\n\tmatLineCyan.color.set( 0x00ffff );\n\n\tvar matLineMagenta = gizmoLineMaterial.clone();\n\tmatLineMagenta.color.set( 0xff00ff );\n\n\tvar matLineYellow = gizmoLineMaterial.clone();\n\tmatLineYellow.color.set( 0xffff00 );\n\n\tvar matLineGray = gizmoLineMaterial.clone();\n\tmatLineGray.color.set( 0x787878 );\n\n\tvar matLineYellowTransparent = matLineYellow.clone();\n\tmatLineYellowTransparent.opacity = 0.25;\n\n\t// reusable geometry\n\n\tvar arrowGeometry = new CylinderBufferGeometry( 0, 0.05, 0.2, 12, 1, false );\n\n\tvar scaleHandleGeometry = new BoxBufferGeometry( 0.125, 0.125, 0.125 );\n\n\tvar lineGeometry = new BufferGeometry();\n\tlineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0,\t1, 0, 0 ], 3 ) );\n\n\tvar CircleGeometry = function ( radius, arc ) {\n\n\t\tvar geometry = new BufferGeometry( );\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i <= 64 * arc; ++ i ) {\n\n\t\t\tvertices.push( 0, Math.cos( i / 32 * Math.PI ) * radius, Math.sin( i / 32 * Math.PI ) * radius );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\treturn geometry;\n\n\t};\n\n\t// Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\tvar TranslateHelperGeometry = function () {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 1, 1, 1 ], 3 ) );\n\n\t\treturn geometry;\n\n\t};\n\n\t// Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\tvar gizmoTranslate = {\n\t\tX: [\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, - Math.PI / 2 ], null, 'fwd' ],\n\t\t\t[ new Mesh( arrowGeometry, matRed ), [ 1, 0, 0 ], [ 0, 0, Math.PI / 2 ], null, 'bwd' ],\n\t\t\t[ new Line( lineGeometry, matLineRed ) ]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], null, null, 'fwd' ],\n\t\t\t[ new Mesh( arrowGeometry, matGreen ), [ 0, 1, 0 ], [ Math.PI, 0, 0 ], null, 'bwd' ],\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ Math.PI / 2, 0, 0 ], null, 'fwd' ],\n\t\t\t[ new Mesh( arrowGeometry, matBlue ), [ 0, 0, 1 ], [ - Math.PI / 2, 0, 0 ], null, 'bwd' ],\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ]]\n\t\t],\n\t\tXYZ: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.1, 0 ), matWhiteTransparent.clone() ), [ 0, 0, 0 ], [ 0, 0, 0 ]]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matYellowTransparent.clone() ), [ 0.15, 0.15, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.18, 0.3, 0 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.3, 0.18, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matCyanTransparent.clone() ), [ 0, 0.15, 0.15 ], [ 0, Math.PI / 2, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.18, 0.3 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.3, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.295, 0.295 ), matMagentaTransparent.clone() ), [ 0.15, 0, 0.15 ], [ - Math.PI / 2, 0, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.18, 0, 0.3 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.3, 0, 0.18 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t]\n\t};\n\n\tvar pickerTranslate = {\n\t\tX: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0.6, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0.6, 0 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 1, 4, 1, false ), matInvisible ), [ 0, 0, 0.6 ], [ Math.PI / 2, 0, 0 ]]\n\t\t],\n\t\tXYZ: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.2, 0 ), matInvisible ) ]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0.2, 0 ]]\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0, 0.2, 0.2 ], [ 0, Math.PI / 2, 0 ]]\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( new PlaneBufferGeometry( 0.4, 0.4 ), matInvisible ), [ 0.2, 0, 0.2 ], [ - Math.PI / 2, 0, 0 ]]\n\t\t]\n\t};\n\n\tvar helperTranslate = {\n\t\tSTART: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t],\n\t\tEND: [\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.01, 2 ), matHelper ), null, null, null, 'helper' ]\n\t\t],\n\t\tDELTA: [\n\t\t\t[ new Line( TranslateHelperGeometry(), matHelper ), null, null, null, 'helper' ]\n\t\t],\n\t\tX: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tY: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t]\n\t};\n\n\tvar gizmoRotate = {\n\t\tX: [\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineRed ) ],\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matRed ), [ 0, 0, 0.99 ], null, [ 1, 3, 1 ]],\n\t\t],\n\t\tY: [\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineGreen ), null, [ 0, 0, - Math.PI / 2 ]],\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matGreen ), [ 0, 0, 0.99 ], null, [ 3, 1, 1 ]],\n\t\t],\n\t\tZ: [\n\t\t\t[ new Line( CircleGeometry( 1, 0.5 ), matLineBlue ), null, [ 0, Math.PI / 2, 0 ]],\n\t\t\t[ new Mesh( new OctahedronBufferGeometry( 0.04, 0 ), matBlue ), [ 0.99, 0, 0 ], null, [ 1, 3, 1 ]],\n\t\t],\n\t\tE: [\n\t\t\t[ new Line( CircleGeometry( 1.25, 1 ), matLineYellowTransparent ), null, [ 0, Math.PI / 2, 0 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 1.17, 0, 0 ], [ 0, 0, - Math.PI / 2 ], [ 1, 1, 0.001 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ - 1.17, 0, 0 ], [ 0, 0, Math.PI / 2 ], [ 1, 1, 0.001 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, - 1.17, 0 ], [ Math.PI, 0, 0 ], [ 1, 1, 0.001 ]],\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.03, 0, 0.15, 4, 1, false ), matLineYellowTransparent ), [ 0, 1.17, 0 ], [ 0, 0, 0 ], [ 1, 1, 0.001 ]],\n\t\t],\n\t\tXYZE: [\n\t\t\t[ new Line( CircleGeometry( 1, 1 ), matLineGray ), null, [ 0, Math.PI / 2, 0 ]]\n\t\t]\n\t};\n\n\tvar helperRotate = {\n\t\tAXIS: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t]\n\t};\n\n\tvar pickerRotate = {\n\t\tX: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, - Math.PI / 2, - Math.PI / 2 ]],\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ Math.PI / 2, 0, 0 ]],\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1, 0.1, 4, 24 ), matInvisible ), [ 0, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t],\n\t\tE: [\n\t\t\t[ new Mesh( new TorusBufferGeometry( 1.25, 0.1, 2, 24 ), matInvisible ) ]\n\t\t],\n\t\tXYZE: [\n\t\t\t[ new Mesh( new SphereBufferGeometry( 0.7, 10, 8 ), matInvisible ) ]\n\t\t]\n\t};\n\n\tvar gizmoScale = {\n\t\tX: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matRed ), [ 0.8, 0, 0 ], [ 0, 0, - Math.PI / 2 ]],\n\t\t\t[ new Line( lineGeometry, matLineRed ), null, null, [ 0.8, 1, 1 ]]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matGreen ), [ 0, 0.8, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineGreen ), null, [ 0, 0, Math.PI / 2 ], [ 0.8, 1, 1 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matBlue ), [ 0, 0, 0.8 ], [ Math.PI / 2, 0, 0 ]],\n\t\t\t[ new Line( lineGeometry, matLineBlue ), null, [ 0, - Math.PI / 2, 0 ], [ 0.8, 1, 1 ]]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matYellowTransparent ), [ 0.85, 0.85, 0 ], null, [ 2, 2, 0.2 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.855, 0.98, 0 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineYellow ), [ 0.98, 0.855, 0 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matCyanTransparent ), [ 0, 0.85, 0.85 ], null, [ 0.2, 2, 2 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.855, 0.98 ], [ 0, 0, Math.PI / 2 ], [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineCyan ), [ 0, 0.98, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matMagentaTransparent ), [ 0.85, 0, 0.85 ], null, [ 2, 0.2, 2 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.855, 0, 0.98 ], null, [ 0.125, 1, 1 ]],\n\t\t\t[ new Line( lineGeometry, matLineMagenta ), [ 0.98, 0, 0.855 ], [ 0, - Math.PI / 2, 0 ], [ 0.125, 1, 1 ]]\n\t\t],\n\t\tXYZX: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 1.1, 0, 0 ]],\n\t\t],\n\t\tXYZY: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 1.1, 0 ]],\n\t\t],\n\t\tXYZZ: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.125, 0.125, 0.125 ), matWhiteTransparent.clone() ), [ 0, 0, 1.1 ]],\n\t\t]\n\t};\n\n\tvar pickerScale = {\n\t\tX: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0.5, 0, 0 ], [ 0, 0, - Math.PI / 2 ]]\n\t\t],\n\t\tY: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0.5, 0 ]]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Mesh( new CylinderBufferGeometry( 0.2, 0, 0.8, 4, 1, false ), matInvisible ), [ 0, 0, 0.5 ], [ Math.PI / 2, 0, 0 ]]\n\t\t],\n\t\tXY: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0.85, 0 ], null, [ 3, 3, 0.2 ]],\n\t\t],\n\t\tYZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0, 0.85, 0.85 ], null, [ 0.2, 3, 3 ]],\n\t\t],\n\t\tXZ: [\n\t\t\t[ new Mesh( scaleHandleGeometry, matInvisible ), [ 0.85, 0, 0.85 ], null, [ 3, 0.2, 3 ]],\n\t\t],\n\t\tXYZX: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 1.1, 0, 0 ]],\n\t\t],\n\t\tXYZY: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 1.1, 0 ]],\n\t\t],\n\t\tXYZZ: [\n\t\t\t[ new Mesh( new BoxBufferGeometry( 0.2, 0.2, 0.2 ), matInvisible ), [ 0, 0, 1.1 ]],\n\t\t]\n\t};\n\n\tvar helperScale = {\n\t\tX: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ - 1e3, 0, 0 ], null, [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tY: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, - 1e3, 0 ], [ 0, 0, Math.PI / 2 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t],\n\t\tZ: [\n\t\t\t[ new Line( lineGeometry, matHelper.clone() ), [ 0, 0, - 1e3 ], [ 0, - Math.PI / 2, 0 ], [ 1e6, 1, 1 ], 'helper' ]\n\t\t]\n\t};\n\n\t// Creates an Object3D with gizmos described in custom hierarchy definition.\n\n\tvar setupGizmo = function ( gizmoMap ) {\n\n\t\tvar gizmo = new Object3D();\n\n\t\tfor ( var name in gizmoMap ) {\n\n\t\t\tfor ( var i = gizmoMap[ name ].length; i --; ) {\n\n\t\t\t\tvar object = gizmoMap[ name ][ i ][ 0 ].clone();\n\t\t\t\tvar position = gizmoMap[ name ][ i ][ 1 ];\n\t\t\t\tvar rotation = gizmoMap[ name ][ i ][ 2 ];\n\t\t\t\tvar scale = gizmoMap[ name ][ i ][ 3 ];\n\t\t\t\tvar tag = gizmoMap[ name ][ i ][ 4 ];\n\n\t\t\t\t// name and tag properties are essential for picking and updating logic.\n\t\t\t\tobject.name = name;\n\t\t\t\tobject.tag = tag;\n\n\t\t\t\tif ( position ) {\n\n\t\t\t\t\tobject.position.set( position[ 0 ], position[ 1 ], position[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( rotation ) {\n\n\t\t\t\t\tobject.rotation.set( rotation[ 0 ], rotation[ 1 ], rotation[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scale ) {\n\n\t\t\t\t\tobject.scale.set( scale[ 0 ], scale[ 1 ], scale[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t\tobject.updateMatrix();\n\n\t\t\t\tvar tempGeometry = object.geometry.clone();\n\t\t\t\ttempGeometry.applyMatrix4( object.matrix );\n\t\t\t\tobject.geometry = tempGeometry;\n\t\t\t\tobject.renderOrder = Infinity;\n\n\t\t\t\tobject.position.set( 0, 0, 0 );\n\t\t\t\tobject.rotation.set( 0, 0, 0 );\n\t\t\t\tobject.scale.set( 1, 1, 1 );\n\n\t\t\t\tgizmo.add( object );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn gizmo;\n\n\t};\n\n\t// Reusable utility variables\n\n\tvar tempVector = new Vector3( 0, 0, 0 );\n\tvar tempEuler = new Euler();\n\tvar alignVector = new Vector3( 0, 1, 0 );\n\tvar zeroVector = new Vector3( 0, 0, 0 );\n\tvar lookAtMatrix = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempQuaternion2 = new Quaternion();\n\tvar identityQuaternion = new Quaternion();\n\n\tvar unitX = new Vector3( 1, 0, 0 );\n\tvar unitY = new Vector3( 0, 1, 0 );\n\tvar unitZ = new Vector3( 0, 0, 1 );\n\n\t// Gizmo creation\n\n\tthis.gizmo = {};\n\tthis.picker = {};\n\tthis.helper = {};\n\n\tthis.add( this.gizmo[ \"translate\" ] = setupGizmo( gizmoTranslate ) );\n\tthis.add( this.gizmo[ \"rotate\" ] = setupGizmo( gizmoRotate ) );\n\tthis.add( this.gizmo[ \"scale\" ] = setupGizmo( gizmoScale ) );\n\tthis.add( this.picker[ \"translate\" ] = setupGizmo( pickerTranslate ) );\n\tthis.add( this.picker[ \"rotate\" ] = setupGizmo( pickerRotate ) );\n\tthis.add( this.picker[ \"scale\" ] = setupGizmo( pickerScale ) );\n\tthis.add( this.helper[ \"translate\" ] = setupGizmo( helperTranslate ) );\n\tthis.add( this.helper[ \"rotate\" ] = setupGizmo( helperRotate ) );\n\tthis.add( this.helper[ \"scale\" ] = setupGizmo( helperScale ) );\n\n\t// Pickers should be hidden always\n\n\tthis.picker[ \"translate\" ].visible = false;\n\tthis.picker[ \"rotate\" ].visible = false;\n\tthis.picker[ \"scale\" ].visible = false;\n\n\t// updateMatrixWorld will update transformations and appearance of individual handles\n\n\tthis.updateMatrixWorld = function () {\n\n\t\tvar space = this.space;\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\tvar quaternion = space === \"local\" ? this.worldQuaternion : identityQuaternion;\n\n\t\t// Show only gizmos for current transform mode\n\n\t\tthis.gizmo[ \"translate\" ].visible = this.mode === \"translate\";\n\t\tthis.gizmo[ \"rotate\" ].visible = this.mode === \"rotate\";\n\t\tthis.gizmo[ \"scale\" ].visible = this.mode === \"scale\";\n\n\t\tthis.helper[ \"translate\" ].visible = this.mode === \"translate\";\n\t\tthis.helper[ \"rotate\" ].visible = this.mode === \"rotate\";\n\t\tthis.helper[ \"scale\" ].visible = this.mode === \"scale\";\n\n\n\t\tvar handles = [];\n\t\thandles = handles.concat( this.picker[ this.mode ].children );\n\t\thandles = handles.concat( this.gizmo[ this.mode ].children );\n\t\thandles = handles.concat( this.helper[ this.mode ].children );\n\n\t\tfor ( var i = 0; i < handles.length; i ++ ) {\n\n\t\t\tvar handle = handles[ i ];\n\n\t\t\t// hide aligned to camera\n\n\t\t\thandle.visible = true;\n\t\t\thandle.rotation.set( 0, 0, 0 );\n\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\tvar factor;\n\n\t\t\tif ( this.camera.isOrthographicCamera ) {\n\n\t\t\t\tfactor = ( this.camera.top - this.camera.bottom ) / this.camera.zoom;\n\n\t\t\t} else {\n\n\t\t\t\tfactor = this.worldPosition.distanceTo( this.cameraPosition ) * Math.min( 1.9 * Math.tan( Math.PI * this.camera.fov / 360 ) / this.camera.zoom, 7 );\n\n\t\t\t}\n\n\t\t\thandle.scale.set( 1, 1, 1 ).multiplyScalar( factor * this.size / 7 );\n\n\t\t\t// TODO: simplify helpers and consider decoupling from gizmo\n\n\t\t\tif ( handle.tag === 'helper' ) {\n\n\t\t\t\thandle.visible = false;\n\n\t\t\t\tif ( handle.name === 'AXIS' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = !! this.axis;\n\n\t\t\t\t\tif ( this.axis === 'X' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Y' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, 0, Math.PI / 2 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'Z' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\thandle.quaternion.copy( quaternion ).multiply( tempQuaternion );\n\n\t\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > 0.9 ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'XYZE' ) {\n\n\t\t\t\t\t\ttempQuaternion.setFromEuler( tempEuler.set( 0, Math.PI / 2, 0 ) );\n\t\t\t\t\t\talignVector.copy( this.rotationAxis );\n\t\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( zeroVector, alignVector, unitY ) );\n\t\t\t\t\t\thandle.quaternion.multiply( tempQuaternion );\n\t\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis === 'E' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else if ( handle.name === 'START' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'END' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPosition );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else if ( handle.name === 'DELTA' ) {\n\n\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\t\t\t\t\thandle.quaternion.copy( this.worldQuaternionStart );\n\t\t\t\t\ttempVector.set( 1e-10, 1e-10, 1e-10 ).add( this.worldPositionStart ).sub( this.worldPosition ).multiplyScalar( - 1 );\n\t\t\t\t\ttempVector.applyQuaternion( this.worldQuaternionStart.clone().invert() );\n\t\t\t\t\thandle.scale.copy( tempVector );\n\t\t\t\t\thandle.visible = this.dragging;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\t\t\tif ( this.dragging ) {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPositionStart );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\thandle.position.copy( this.worldPosition );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.axis ) {\n\n\t\t\t\t\t\thandle.visible = this.axis.search( handle.name ) !== - 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// If updating helper, skip rest of the loop\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// Align handles to current local or world rotation\n\n\t\t\thandle.quaternion.copy( quaternion );\n\n\t\t\tif ( this.mode === 'translate' || this.mode === 'scale' ) {\n\n\t\t\t\t// Hide translate and scale axis facing the camera\n\n\t\t\t\tvar AXIS_HIDE_TRESHOLD = 0.99;\n\t\t\t\tvar PLANE_HIDE_TRESHOLD = 0.2;\n\t\t\t\tvar AXIS_FLIP_TRESHOLD = 0.0;\n\n\n\t\t\t\tif ( handle.name === 'X' || handle.name === 'XYZX' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' || handle.name === 'XYZY' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' || handle.name === 'XYZZ' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) > AXIS_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XY' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'YZ' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'XZ' ) {\n\n\t\t\t\t\tif ( Math.abs( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) ) < PLANE_HIDE_TRESHOLD ) {\n\n\t\t\t\t\t\thandle.scale.set( 1e-10, 1e-10, 1e-10 );\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Flip translate and scale axis ocluded behind another axis\n\n\t\t\t\tif ( handle.name.search( 'X' ) !== - 1 ) {\n\n\t\t\t\t\tif ( alignVector.copy( unitX ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.scale.x *= - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name.search( 'Y' ) !== - 1 ) {\n\n\t\t\t\t\tif ( alignVector.copy( unitY ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.scale.y *= - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name.search( 'Z' ) !== - 1 ) {\n\n\t\t\t\t\tif ( alignVector.copy( unitZ ).applyQuaternion( quaternion ).dot( this.eye ) < AXIS_FLIP_TRESHOLD ) {\n\n\t\t\t\t\t\tif ( handle.tag === 'fwd' ) {\n\n\t\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\thandle.scale.z *= - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( handle.tag === 'bwd' ) {\n\n\t\t\t\t\t\thandle.visible = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( this.mode === 'rotate' ) {\n\n\t\t\t\t// Align handles to current local or world rotation\n\n\t\t\t\ttempQuaternion2.copy( quaternion );\n\t\t\t\talignVector.copy( this.eye ).applyQuaternion( tempQuaternion.copy( quaternion ).invert() );\n\n\t\t\t\tif ( handle.name.search( \"E\" ) !== - 1 ) {\n\n\t\t\t\t\thandle.quaternion.setFromRotationMatrix( lookAtMatrix.lookAt( this.eye, zeroVector, unitY ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'X' ) {\n\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitX, Math.atan2( - alignVector.y, alignVector.z ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Y' ) {\n\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitY, Math.atan2( alignVector.x, alignVector.z ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t\tif ( handle.name === 'Z' ) {\n\n\t\t\t\t\ttempQuaternion.setFromAxisAngle( unitZ, Math.atan2( alignVector.y, alignVector.x ) );\n\t\t\t\t\ttempQuaternion.multiplyQuaternions( tempQuaternion2, tempQuaternion );\n\t\t\t\t\thandle.quaternion.copy( tempQuaternion );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Hide disabled axes\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"X\" ) === - 1 || this.showX );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Y\" ) === - 1 || this.showY );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"Z\" ) === - 1 || this.showZ );\n\t\t\thandle.visible = handle.visible && ( handle.name.indexOf( \"E\" ) === - 1 || ( this.showX && this.showY && this.showZ ) );\n\n\t\t\t// highlight selected axis\n\n\t\t\thandle.material._opacity = handle.material._opacity || handle.material.opacity;\n\t\t\thandle.material._color = handle.material._color || handle.material.color.clone();\n\n\t\t\thandle.material.color.copy( handle.material._color );\n\t\t\thandle.material.opacity = handle.material._opacity;\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\thandle.material.opacity *= 0.5;\n\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t} else if ( this.axis ) {\n\n\t\t\t\tif ( handle.name === this.axis ) {\n\n\t\t\t\t\thandle.material.opacity = 1.0;\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t} else if ( this.axis.split( '' ).some( function ( a ) {\n\n\t\t\t\t\treturn handle.name === a;\n\n\t\t\t\t} ) ) {\n\n\t\t\t\t\thandle.material.opacity = 1.0;\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\thandle.material.opacity *= 0.25;\n\t\t\t\t\thandle.material.color.lerp( new Color( 1, 1, 1 ), 0.5 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\n\n\t};\n\n};\n\nTransformControlsGizmo.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: TransformControlsGizmo,\n\n\tisTransformControlsGizmo: true\n\n} );\n\n\nvar TransformControlsPlane = function () {\n\n\t'use strict';\n\n\tMesh.call( this,\n\t\tnew PlaneBufferGeometry( 100000, 100000, 2, 2 ),\n\t\tnew MeshBasicMaterial( { visible: false, wireframe: true, side: DoubleSide, transparent: true, opacity: 0.1, toneMapped: false } )\n\t);\n\n\tthis.type = 'TransformControlsPlane';\n\n\tvar unitX = new Vector3( 1, 0, 0 );\n\tvar unitY = new Vector3( 0, 1, 0 );\n\tvar unitZ = new Vector3( 0, 0, 1 );\n\n\tvar tempVector = new Vector3();\n\tvar dirVector = new Vector3();\n\tvar alignVector = new Vector3();\n\tvar tempMatrix = new Matrix4();\n\tvar identityQuaternion = new Quaternion();\n\n\tthis.updateMatrixWorld = function () {\n\n\t\tvar space = this.space;\n\n\t\tthis.position.copy( this.worldPosition );\n\n\t\tif ( this.mode === 'scale' ) space = 'local'; // scale always oriented to local rotation\n\n\t\tunitX.set( 1, 0, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\t\tunitY.set( 0, 1, 0 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\t\tunitZ.set( 0, 0, 1 ).applyQuaternion( space === \"local\" ? this.worldQuaternion : identityQuaternion );\n\n\t\t// Align the plane for current transform mode, axis and space.\n\n\t\talignVector.copy( unitY );\n\n\t\tswitch ( this.mode ) {\n\n\t\t\tcase 'translate':\n\t\t\tcase 'scale':\n\t\t\t\tswitch ( this.axis ) {\n\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitX );\n\t\t\t\t\t\tdirVector.copy( unitX ).cross( alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Y':\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitY );\n\t\t\t\t\t\tdirVector.copy( unitY ).cross( alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\t\talignVector.copy( this.eye ).cross( unitZ );\n\t\t\t\t\t\tdirVector.copy( unitZ ).cross( alignVector );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XY':\n\t\t\t\t\t\tdirVector.copy( unitZ );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'YZ':\n\t\t\t\t\t\tdirVector.copy( unitX );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XZ':\n\t\t\t\t\t\talignVector.copy( unitZ );\n\t\t\t\t\t\tdirVector.copy( unitY );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'XYZ':\n\t\t\t\t\tcase 'E':\n\t\t\t\t\t\tdirVector.set( 0, 0, 0 );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\tdefault:\n\t\t\t\t// special case for rotate\n\t\t\t\tdirVector.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( dirVector.length() === 0 ) {\n\n\t\t\t// If in rotate mode, make the plane parallel to camera\n\t\t\tthis.quaternion.copy( this.cameraQuaternion );\n\n\t\t} else {\n\n\t\t\ttempMatrix.lookAt( tempVector.set( 0, 0, 0 ), dirVector, alignVector );\n\n\t\t\tthis.quaternion.setFromRotationMatrix( tempMatrix );\n\n\t\t}\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this );\n\n\t};\n\n};\n\nTransformControlsPlane.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: TransformControlsPlane,\n\n\tisTransformControlsPlane: true\n\n} );\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}