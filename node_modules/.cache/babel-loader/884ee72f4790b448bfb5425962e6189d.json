{"ast":null,"code":"import { useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\nfunction draco() {\n  var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://www.gstatic.com/draco/v1/decoders/';\n  return function (loader) {\n    var dracoLoader = new DRACOLoader();\n    dracoLoader.setDecoderPath(url);\n    loader.setDRACOLoader(dracoLoader);\n  };\n}\nfunction useGLTF(path) {\n  var useDraco = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var gltf = useLoader(GLTFLoader, path, useDraco ? draco(typeof useDraco === 'string' ? useDraco : undefined) : undefined);\n  return gltf;\n}\nuseGLTF.preload = function (path) {\n  var useDraco = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return useLoader.preload(GLTFLoader, path, useDraco ? draco(typeof useDraco === 'string' ? useDraco : undefined) : undefined);\n};\nexport { useGLTF };","map":{"version":3,"names":["useLoader","GLTFLoader","DRACOLoader","draco","url","arguments","length","undefined","loader","dracoLoader","setDecoderPath","setDRACOLoader","useGLTF","path","useDraco","gltf","preload"],"sources":["/Users/Aaron/Desktop/mirrorsReactThreeFiber/node_modules/@react-three/drei/useGLTF.js"],"sourcesContent":["import { useLoader } from 'react-three-fiber';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader';\n\nfunction draco(url = 'https://www.gstatic.com/draco/v1/decoders/') {\n  return loader => {\n    const dracoLoader = new DRACOLoader();\n    dracoLoader.setDecoderPath(url);\n    loader.setDRACOLoader(dracoLoader);\n  };\n}\n\nfunction useGLTF(path, useDraco = true) {\n  const gltf = useLoader(GLTFLoader, path, useDraco ? draco(typeof useDraco === 'string' ? useDraco : undefined) : undefined);\n  return gltf;\n}\n\nuseGLTF.preload = (path, useDraco = true) => useLoader.preload(GLTFLoader, path, useDraco ? draco(typeof useDraco === 'string' ? useDraco : undefined) : undefined);\n\nexport { useGLTF };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,WAAW,QAAQ,wCAAwC;AAEpE,SAASC,KAAKA,CAAA,EAAqD;EAAA,IAApDC,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,4CAA4C;EAC/D,OAAO,UAAAG,MAAM,EAAI;IACf,IAAMC,WAAW,GAAG,IAAIP,WAAW,CAAC,CAAC;IACrCO,WAAW,CAACC,cAAc,CAACN,GAAG,CAAC;IAC/BI,MAAM,CAACG,cAAc,CAACF,WAAW,CAAC;EACpC,CAAC;AACH;AAEA,SAASG,OAAOA,CAACC,IAAI,EAAmB;EAAA,IAAjBC,QAAQ,GAAAT,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACpC,IAAMU,IAAI,GAAGf,SAAS,CAACC,UAAU,EAAEY,IAAI,EAAEC,QAAQ,GAAGX,KAAK,CAAC,OAAOW,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAGP,SAAS,CAAC,GAAGA,SAAS,CAAC;EAC3H,OAAOQ,IAAI;AACb;AAEAH,OAAO,CAACI,OAAO,GAAG,UAACH,IAAI;EAAA,IAAEC,QAAQ,GAAAT,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAAA,OAAKL,SAAS,CAACgB,OAAO,CAACf,UAAU,EAAEY,IAAI,EAAEC,QAAQ,GAAGX,KAAK,CAAC,OAAOW,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAGP,SAAS,CAAC,GAAGA,SAAS,CAAC;AAAA;AAEnK,SAASK,OAAO"},"metadata":{},"sourceType":"module"}