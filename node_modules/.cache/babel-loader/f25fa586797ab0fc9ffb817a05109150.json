{"ast":null,"code":"import { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\nvar LineGeometry = function LineGeometry() {\n  LineSegmentsGeometry.call(this);\n  this.type = 'LineGeometry';\n};\nLineGeometry.prototype = Object.assign(Object.create(LineSegmentsGeometry.prototype), {\n  constructor: LineGeometry,\n  isLineGeometry: true,\n  setPositions: function setPositions(array) {\n    // converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n    var length = array.length - 3;\n    var points = new Float32Array(2 * length);\n    for (var i = 0; i < length; i += 3) {\n      points[2 * i] = array[i];\n      points[2 * i + 1] = array[i + 1];\n      points[2 * i + 2] = array[i + 2];\n      points[2 * i + 3] = array[i + 3];\n      points[2 * i + 4] = array[i + 4];\n      points[2 * i + 5] = array[i + 5];\n    }\n    LineSegmentsGeometry.prototype.setPositions.call(this, points);\n    return this;\n  },\n  setColors: function setColors(array) {\n    // converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n    var length = array.length - 3;\n    var colors = new Float32Array(2 * length);\n    for (var i = 0; i < length; i += 3) {\n      colors[2 * i] = array[i];\n      colors[2 * i + 1] = array[i + 1];\n      colors[2 * i + 2] = array[i + 2];\n      colors[2 * i + 3] = array[i + 3];\n      colors[2 * i + 4] = array[i + 4];\n      colors[2 * i + 5] = array[i + 5];\n    }\n    LineSegmentsGeometry.prototype.setColors.call(this, colors);\n    return this;\n  },\n  fromLine: function fromLine(line) {\n    var geometry = line.geometry;\n    if (geometry.isGeometry) {\n      this.setPositions(geometry.vertices);\n    } else if (geometry.isBufferGeometry) {\n      this.setPositions(geometry.attributes.position.array); // assumes non-indexed\n    }\n\n    // set colors, maybe\n\n    return this;\n  },\n  copy: function copy( /* source */\n  ) {\n    // todo\n\n    return this;\n  }\n});\nexport { LineGeometry };","map":{"version":3,"names":["LineSegmentsGeometry","LineGeometry","call","type","prototype","Object","assign","create","constructor","isLineGeometry","setPositions","array","length","points","Float32Array","i","setColors","colors","fromLine","line","geometry","isGeometry","vertices","isBufferGeometry","attributes","position","copy"],"sources":["/Users/Aaron/Desktop/mirrorsReactThreeFiber/node_modules/three/examples/jsm/lines/LineGeometry.js"],"sourcesContent":["import { LineSegmentsGeometry } from \"../lines/LineSegmentsGeometry.js\";\n\nvar LineGeometry = function () {\n\n\tLineSegmentsGeometry.call( this );\n\n\tthis.type = 'LineGeometry';\n\n};\n\nLineGeometry.prototype = Object.assign( Object.create( LineSegmentsGeometry.prototype ), {\n\n\tconstructor: LineGeometry,\n\n\tisLineGeometry: true,\n\n\tsetPositions: function ( array ) {\n\n\t\t// converts [ x1, y1, z1,  x2, y2, z2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar points = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tpoints[ 2 * i ] = array[ i ];\n\t\t\tpoints[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tpoints[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tpoints[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tpoints[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tpoints[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setPositions.call( this, points );\n\n\t\treturn this;\n\n\t},\n\n\tsetColors: function ( array ) {\n\n\t\t// converts [ r1, g1, b1,  r2, g2, b2, ... ] to pairs format\n\n\t\tvar length = array.length - 3;\n\t\tvar colors = new Float32Array( 2 * length );\n\n\t\tfor ( var i = 0; i < length; i += 3 ) {\n\n\t\t\tcolors[ 2 * i ] = array[ i ];\n\t\t\tcolors[ 2 * i + 1 ] = array[ i + 1 ];\n\t\t\tcolors[ 2 * i + 2 ] = array[ i + 2 ];\n\n\t\t\tcolors[ 2 * i + 3 ] = array[ i + 3 ];\n\t\t\tcolors[ 2 * i + 4 ] = array[ i + 4 ];\n\t\t\tcolors[ 2 * i + 5 ] = array[ i + 5 ];\n\n\t\t}\n\n\t\tLineSegmentsGeometry.prototype.setColors.call( this, colors );\n\n\t\treturn this;\n\n\t},\n\n\tfromLine: function ( line ) {\n\n\t\tvar geometry = line.geometry;\n\n\t\tif ( geometry.isGeometry ) {\n\n\t\t\tthis.setPositions( geometry.vertices );\n\n\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\tthis.setPositions( geometry.attributes.position.array ); // assumes non-indexed\n\n\t\t}\n\n\t\t// set colors, maybe\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( /* source */ ) {\n\n\t\t// todo\n\n\t\treturn this;\n\n\t}\n\n} );\n\nexport { LineGeometry };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}