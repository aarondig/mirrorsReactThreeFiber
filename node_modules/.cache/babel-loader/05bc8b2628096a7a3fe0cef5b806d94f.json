{"ast":null,"code":"import { useThree } from 'react-three-fiber';\nfunction useAspect(type, width, height) {\n  var factor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var _useThree = useThree(),\n    v = _useThree.viewport,\n    aspect = _useThree.aspect;\n  var adaptedHeight = height * (aspect > width / height ? v.width / width : v.height / height);\n  var adaptedWidth = width * (aspect > width / height ? v.width / width : v.height / height);\n  return [adaptedWidth * factor, adaptedHeight * factor, 1];\n}\nexport { useAspect };","map":{"version":3,"names":["useThree","useAspect","type","width","height","factor","arguments","length","undefined","_useThree","v","viewport","aspect","adaptedHeight","adaptedWidth"],"sources":["/Users/Aaron/Desktop/mirrorsReactThreeFiber/node_modules/@react-three/drei/useAspect.js"],"sourcesContent":["import { useThree } from 'react-three-fiber';\n\nfunction useAspect(type, width, height, factor = 1) {\n  const {\n    viewport: v,\n    aspect\n  } = useThree();\n  const adaptedHeight = height * (aspect > width / height ? v.width / width : v.height / height);\n  const adaptedWidth = width * (aspect > width / height ? v.width / width : v.height / height);\n  return [adaptedWidth * factor, adaptedHeight * factor, 1];\n}\n\nexport { useAspect };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAE5C,SAASC,SAASA,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAc;EAAA,IAAZC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAChD,IAAAG,SAAA,GAGIT,QAAQ,CAAC,CAAC;IAFFU,CAAC,GAAAD,SAAA,CAAXE,QAAQ;IACRC,MAAM,GAAAH,SAAA,CAANG,MAAM;EAER,IAAMC,aAAa,GAAGT,MAAM,IAAIQ,MAAM,GAAGT,KAAK,GAAGC,MAAM,GAAGM,CAAC,CAACP,KAAK,GAAGA,KAAK,GAAGO,CAAC,CAACN,MAAM,GAAGA,MAAM,CAAC;EAC9F,IAAMU,YAAY,GAAGX,KAAK,IAAIS,MAAM,GAAGT,KAAK,GAAGC,MAAM,GAAGM,CAAC,CAACP,KAAK,GAAGA,KAAK,GAAGO,CAAC,CAACN,MAAM,GAAGA,MAAM,CAAC;EAC5F,OAAO,CAACU,YAAY,GAAGT,MAAM,EAAEQ,aAAa,GAAGR,MAAM,EAAE,CAAC,CAAC;AAC3D;AAEA,SAASJ,SAAS"},"metadata":{},"sourceType":"module"}