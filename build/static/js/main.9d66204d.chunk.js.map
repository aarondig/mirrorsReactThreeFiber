{"version":3,"sources":["components/Header/mirrorsData.js","fonts/Metropolis-ExtraBold.otf","components/Header/ThinFilmFresnelMap.js","components/Header/index.js","App.js","index.js"],"names":["mirrorsData","mirrors","args","position","rotation","Math","PI","ThinFilmFresnelMap","filmThickness","refractiveIndexFilm","refractiveIndexBase","size","this","_filmThickness","_refractiveIndexFilm","_refractiveIndexBase","_size","_data","Uint8Array","_updateData","THREE","call","generateMipmaps","needsUpdate","prototype","Object","create","get","set","value","updateSettings","_fresnelRefl","refractiveIndex1","refractiveIndex2","cos1","cos2","R","phi","sin1Sqr","refrRatio","x","y","sqrRefrRatio","atan","sqrt","r_p","r_s","xFit_1931","lambda","t1","t2","t3","exp","yFit_1931","zFit_1931","data","phi12","phi21","phi23","R12","T12","R23","R_bi","T_tot","R_star","R_bi_sqr","R_12_star","R_star_t_tot","refrRatioSqr","refrRatioSqrBase","i","cosThetaI","cosThetaT","cosThetaT2","pathDiff","pathDiff2PI","z","totX","totY","totZ","j","waveLen","deltaPhase","cosPhiX","cos","cosPhiY","v","wx","wy","wz","r","g","b","clamp","k","floor","Title","_ref","_ref$layers","layers","undefined","props","titlePosi","_objectWithoutProperties","_excluded","group","useRef","_useState","useState","_useState2","_slicedToArray","setEvent","window","matchMedia","addListener","useEffect","current","lookAt","textProps","fontSize","anchorX","font","fontWeight","AnimatedText","animated","Text","_jsx","_objectSpread","ref","children","native","name","depthTest","matches","TitleCopies","_ref2","vertices","useMemo","map","vertex","Mirror","_ref3","sideMaterial","reflectionMaterial","_excluded2","useFrame","Box","material","Mirrors","_ref4","envMap","useResource","_useState3","thinFilmFresnelMap","_jsxs","_Fragment","color","mirror","index","concat","Scene","_useRenderTarget","cubeCamera","_useState5","format","renderTarget","_ref5","gl","scene","update","useRenderTarget","_useRenderTarget2","rotationEuler","rotationQuaternion","viewport","useThree","_ref6","mouse","width","height","setFromEuler","quaternion","slerp","AnimatedTitle","Octahedron","side","transparent","opacity","texture","App","Loader","progress","useProgress","Html","center","style","className","Canvas","concurrent","shadowMap","camera","fov","attach","Suspense","fallback","Physics","intensity","OrbitControls","maxDistance","minDistance","Link","to","SiGithub","ReactDOM","render","Router","Routes","Route","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.9d66204d.chunk.js","sourcesContent":["export const mirrorsData = {\n  mirrors: [\n    {\n      args: [2.87483173052424, 2.920755196190408, 0.05],\n      position: [3.116376203948097, -2.1742814140991196, -7.998859699752443],\n      rotation: [1.2536197471688286, -1.6683567077395978, -2.8428053193736256]\n    },\n    {\n      args: [1.799233278635274, 1.9642524560408021, 0.05],\n      position: [-3.325473394997085, 3.5307542721423446, -6.530151273151705],\n      rotation: [1.3951213133257899, -0.2888432911308304, 0.7178380971731012]\n    },\n    {\n      args: [2.8780801433198553, 2.9065216543855974, 0.05],\n      position: [1.2839348832937714, 2.888947614684322, -6.467835086028824],\n      rotation: [-1.3341775957580109, 2.8031736269533125, -0.18771283594857274]\n    },\n    {\n      args: [2.2175936863874006, 1.3820832190972703, 0.05],\n      position: [4.552400557892, 0.9814639517113943, -5.836395383986279],\n      rotation: [-2.3299625953354437, 0.6139693063561498, -0.3902201705507059]\n    },\n    {\n      args: [1.7446126775638997, 2.6211835436253392, 0.05],\n      position: [-2.826056860647832, -3.0308788716782042, -5.4685371584057485],\n      rotation: [-1.4052581815125295, 3.002812728418492, 2.54202362440499]\n    },\n    {\n      args: [1.139549518339333, 1.8007363020629232, 0.05],\n      position: [-0.041834072623521124, -1.351281881742426, -2.40411451302583],\n      rotation: [1.2848394396618561, -0.310029190116405, -2.107987000676972]\n    },\n    {\n      args: [2.2021865186914007, 2.610358395964105, 0.05],\n      position: [-4.1542927375782015, -0.349560252979882, -2.489538720961452],\n      rotation: [1.4401104979160235, 1.8179123712769852, -2.2157249608220475]\n    },\n    {\n      args: [2.0964670262303393, 1.5750930602784585, 0.05],\n      position: [6.571372497652996, -2.6457284555412066, -6.252562745592483],\n      rotation: [1.1870955922970219, 0.5335941225301444, 0.4523391139946649]\n    },\n    {\n      args: [1.3270056676441064, 1.5169873297208318, 0.05],\n      position: [3.6761316187794724, -4.141729519755186, -4.39063863430271],\n      rotation: [-0.7690386626408349, 1.4093151276977963, 2.0252977680762476]\n    },\n    {\n      args: [5.1426105440458216, 4.416201863189162, 0.05],\n      position: [0.646982562789564, 7.0909673302614196, -8.351518200349154],\n      rotation: [-0.0692356415822184, 1.918047448701773, 0.5268942683942657]\n    }\n  ]\n}\n\nexport const textData = [\n  {\n    position: [0, 0, -10],\n    rotation: [0, 0, 0],\n    scale: [1, 1, 1]\n  },\n  {\n    position: [0, 0, 10],\n    rotation: [0, 0, 0],\n    scale: [-1, 1, 1]\n  },\n  {\n    position: [-10, 0, 0],\n    rotation: [0, Math.PI / 2, 0],\n    scale: [1, 1, 1]\n  },\n  {\n    position: [10, 0, 0],\n    rotation: [0, -Math.PI / 2, 0],\n    scale: [-1, 1, 1]\n  },\n  {\n    position: [0, 10, 0],\n    rotation: [Math.PI / 2, 0, 0],\n    scale: [1, 1, 1]\n  },\n  {\n    position: [0, -10, 0],\n    rotation: [-Math.PI / 2, 0, 0],\n    scale: [-1, 1, 1]\n  }\n]","export default __webpack_public_path__ + \"static/media/Metropolis-ExtraBold.f179dd5f.otf\";","/**\n * @classdesc\n * ThinFilmFresnelMap is a lookup texture containing the reflection colour. The texture index value\n * is dot(normal, view). The texture values are stored in approximated gamma space (power 2.0), so\n * the sampled value needs to be multiplied with itself before use. The sampled value should replace\n * the fresnel factor in a PBR material.\n *\n * @property filmThickness The thickness of the thin film layer in nanometers. Defaults to 380.\n * @property refractiveIndexFilm The refractive index of the thin film. Defaults to 2.\n * @property refractiveIndexBase The refractive index of the material under the film. Defaults to 3.\n *\n * @constructor\n * @param filmThickness The thickness of the thin film layer in nanometers. Defaults to 380.\n * @param refractiveIndexFilm The refractive index of the thin film. Defaults to 2.\n * @param refractiveIndexBase The refractive index of the material under the film. Defaults to 3.\n * @param size The width of the texture. Defaults to 64.\n *\n * @extends DataTexture\n *\n * @author David Lenaerts <http://www.derschmale.com>\n */\nimport * as THREE from 'three'\n\nexport function ThinFilmFresnelMap(filmThickness, refractiveIndexFilm, refractiveIndexBase, size) {\n  this._filmThickness = filmThickness || 100.0\n  this._refractiveIndexFilm = refractiveIndexFilm || 2\n  this._refractiveIndexBase = refractiveIndexBase || 3\n  this._size = size || 128\n  this._data = new Uint8Array(this._size * 4)\n\n  this._updateData()\n\n  THREE.DataTexture.call(\n    this,\n    this._data,\n    this._size,\n    1,\n    THREE.RGBAFormat,\n    THREE.UnsignedByteType,\n    THREE.UVMapping,\n    THREE.RepeatWrapping,\n    THREE.RepeatWrapping,\n    THREE.LinearFilter,\n    THREE.LinearMipMapLinearFilter\n  )\n  this.generateMipmaps = true\n  this.needsUpdate = true\n}\n\nThinFilmFresnelMap.prototype = Object.create(THREE.DataTexture.prototype, {\n  filmThickness: {\n    get: function () {\n      return this._filmThickness\n    },\n    set: function (value) {\n      this._filmThickness = value\n      this.updateSettings(this._filmThickness, this._refractiveIndexFilm, this._refractiveIndexBase)\n    }\n  },\n  refractiveIndexFilm: {\n    get: function () {\n      return this._refractiveIndexFilm\n    },\n    set: function (value) {\n      this._refractiveIndexFilm = value\n      this.updateSettings(this._filmThickness, this._refractiveIndexFilm, this._refractiveIndexBase)\n    }\n  },\n  refractiveIndexBase: {\n    get: function () {\n      return this._refractiveIndexBase\n    },\n    set: function (value) {\n      this._refractiveIndexBase = value\n      this.updateSettings(this._filmThickness, this._refractiveIndexFilm, this._refractiveIndexBase)\n    }\n  }\n})\n\n/**\n * @private\n */\nThinFilmFresnelMap.prototype._fresnelRefl = function (refractiveIndex1, refractiveIndex2, cos1, cos2, R, phi) {\n  // r is amplitudinal, R is power\n  var sin1Sqr = 1.0 - cos1 * cos1 // = sin^2(incident)\n  var refrRatio = refractiveIndex1 / refractiveIndex2\n\n  if (refrRatio * refrRatio * sin1Sqr > 1.0) {\n    // total internal reflection\n    R.x = 1.0\n    R.y = 1.0\n\n    var sqrRefrRatio = refrRatio * refrRatio\n    // it looks like glsl's atan ranges are different from those in JS?\n    phi.x = 2.0 * Math.atan((-sqrRefrRatio * Math.sqrt(sin1Sqr - 1.0 / sqrRefrRatio)) / cos1)\n    phi.y = 2.0 * Math.atan(-Math.sqrt(sin1Sqr - 1.0 / sqrRefrRatio) / cos1)\n  } else {\n    var r_p = (refractiveIndex2 * cos1 - refractiveIndex1 * cos2) / (refractiveIndex2 * cos1 + refractiveIndex1 * cos2)\n    var r_s = (refractiveIndex1 * cos1 - refractiveIndex2 * cos2) / (refractiveIndex1 * cos1 + refractiveIndex2 * cos2)\n\n    phi.x = r_p < 0.0 ? Math.PI : 0.0\n    phi.y = r_s < 0.0 ? Math.PI : 0.0\n\n    R.x = r_p * r_p\n    R.y = r_s * r_s\n  }\n}\n\n/**\n * @private\n */\nThinFilmFresnelMap.prototype._updateData = function () {\n  var filmThickness = this._filmThickness\n  var refractiveIndexFilm = this._refractiveIndexFilm\n  var refractiveIndexBase = this._refractiveIndexBase\n  var size = this._size\n\n  // approximate CIE XYZ weighting functions from: http://jcgt.org/published/0002/02/01/paper.pdf\n  function xFit_1931(lambda) {\n    var t1 = (lambda - 442.0) * (lambda < 442.0 ? 0.0624 : 0.0374)\n    var t2 = (lambda - 599.8) * (lambda < 599.8 ? 0.0264 : 0.0323)\n    var t3 = (lambda - 501.1) * (lambda < 501.1 ? 0.049 : 0.0382)\n    return 0.362 * Math.exp(-0.5 * t1 * t1) + 1.056 * Math.exp(-0.5 * t2 * t2) - 0.065 * Math.exp(-0.5 * t3 * t3)\n  }\n\n  function yFit_1931(lambda) {\n    var t1 = (lambda - 568.8) * (lambda < 568.8 ? 0.0213 : 0.0247)\n    var t2 = (lambda - 530.9) * (lambda < 530.9 ? 0.0613 : 0.0322)\n    return 0.821 * Math.exp(-0.5 * t1 * t1) + 0.286 * Math.exp(-0.5 * t2 * t2)\n  }\n\n  function zFit_1931(lambda) {\n    var t1 = (lambda - 437.0) * (lambda < 437.0 ? 0.0845 : 0.0278)\n    var t2 = (lambda - 459.0) * (lambda < 459.0 ? 0.0385 : 0.0725)\n    return 1.217 * Math.exp(-0.5 * t1 * t1) + 0.681 * Math.exp(-0.5 * t2 * t2)\n  }\n\n  var data = this._data\n  var phi12 = new THREE.Vector2()\n  var phi21 = new THREE.Vector2()\n  var phi23 = new THREE.Vector2()\n  var R12 = new THREE.Vector2()\n  var T12 = new THREE.Vector2()\n  var R23 = new THREE.Vector2()\n  var R_bi = new THREE.Vector2()\n  var T_tot = new THREE.Vector2()\n  var R_star = new THREE.Vector2()\n  var R_bi_sqr = new THREE.Vector2()\n  var R_12_star = new THREE.Vector2()\n  var R_star_t_tot = new THREE.Vector2()\n\n  var refrRatioSqr = 1.0 / (refractiveIndexFilm * refractiveIndexFilm)\n  var refrRatioSqrBase = (refractiveIndexFilm * refractiveIndexFilm) / (refractiveIndexBase * refractiveIndexBase)\n\n  // RGB is too limiting, so we use the entire spectral domain, but using limited samples (64) to\n  // create more pleasing bands\n  var numBands = 64\n  var waveLenRange = 780 - 380 // the entire visible range\n\n  for (var i = 0; i < size; ++i) {\n    var cosThetaI = i / size\n    var cosThetaT = Math.sqrt(1 - refrRatioSqr * (1.0 - cosThetaI * cosThetaI))\n    var cosThetaT2 = Math.sqrt(1 - refrRatioSqrBase * (1.0 - cosThetaT * cosThetaT))\n\n    // this is essentially the extra distance traveled by a ray if it bounds through the film\n    var pathDiff = 2.0 * refractiveIndexFilm * filmThickness * cosThetaT\n    var pathDiff2PI = 2.0 * Math.PI * pathDiff\n\n    this._fresnelRefl(1.0, refractiveIndexFilm, cosThetaI, cosThetaT, R12, phi12)\n    T12.x = 1.0 - R12.x\n    T12.y = 1.0 - R12.y\n    phi21.x = Math.PI - phi12.x\n    phi21.y = Math.PI - phi12.y\n\n    // this concerns the base layer\n    this._fresnelRefl(refractiveIndexFilm, refractiveIndexBase, cosThetaT, cosThetaT2, R23, phi23)\n    R_bi.x = Math.sqrt(R23.x * R12.x)\n    R_bi.y = Math.sqrt(R23.y * R12.y)\n    T_tot.x = Math.sqrt(T12.x * T12.x)\n    T_tot.y = Math.sqrt(T12.y * T12.y)\n    R_star.x = (T12.x * T12.x * R23.x) / (1.0 - R23.x * R12.x)\n    R_star.y = (T12.y * T12.y * R23.y) / (1.0 - R23.y * R12.y)\n    R_bi_sqr.x = R_bi.x * R_bi.x\n    R_bi_sqr.y = R_bi.y * R_bi.y\n    R_12_star.x = R12.x + R_star.x\n    R_12_star.y = R12.y + R_star.y\n    R_star_t_tot.x = R_star.x - T_tot.x\n    R_star_t_tot.y = R_star.y - T_tot.y\n    var x = 0,\n      y = 0,\n      z = 0\n    var totX = 0,\n      totY = 0,\n      totZ = 0\n\n    // TODO: we could also put the thickness in the look-up table, make it a 2D table\n    for (var j = 0; j < numBands; ++j) {\n      var waveLen = 380 + (j / (numBands - 1)) * waveLenRange\n      var deltaPhase = pathDiff2PI / waveLen\n\n      var cosPhiX = Math.cos(deltaPhase + phi23.x + phi21.x)\n      var cosPhiY = Math.cos(deltaPhase + phi23.y + phi21.y)\n      var valX =\n        R_12_star.x +\n        ((2.0 * (R_bi.x * cosPhiX - R_bi_sqr.x)) / (1.0 - 2 * R_bi.x * cosPhiX + R_bi_sqr.x)) * R_star_t_tot.x\n      var valY =\n        R_12_star.y +\n        ((2.0 * (R_bi.y * cosPhiY - R_bi_sqr.y)) / (1.0 - 2 * R_bi.y * cosPhiY + R_bi_sqr.y)) * R_star_t_tot.y\n      var v = 0.5 * (valX + valY)\n\n      var wx = xFit_1931(waveLen)\n      var wy = yFit_1931(waveLen)\n      var wz = zFit_1931(waveLen)\n\n      totX += wx\n      totY += wy\n      totZ += wz\n\n      x += wx * v\n      y += wy * v\n      z += wz * v\n    }\n\n    x /= totX\n    y /= totY\n    z /= totZ\n\n    var r = 3.2406 * x - 1.5372 * y - 0.4986 * z\n    var g = -0.9689 * x + 1.8758 * y + 0.0415 * z\n    var b = 0.0557 * x - 0.204 * y + 1.057 * z\n\n    r = THREE.Math.clamp(r, 0.0, 1.0)\n    g = THREE.Math.clamp(g, 0.0, 1.0)\n    b = THREE.Math.clamp(b, 0.0, 1.0)\n\n    // linear to gamma\n    r = Math.sqrt(r)\n    g = Math.sqrt(g)\n    b = Math.sqrt(b)\n\n    // CIE XYZ to linear rgb conversion matrix:\n    // 3.2406 -1.5372 -0.4986\n    // -0.9689  1.8758  0.0415\n    // 0.0557 -0.2040  1.0570\n\n    var k = i << 2\n    data[k] = Math.floor(r * 0xff)\n    data[k + 1] = Math.floor(g * 0xff)\n    data[k + 2] = Math.floor(b * 0xff)\n    data[k + 3] = 0xff\n  }\n\n  this.needsUpdate = true\n}","import React, { useRef, useState, useEffect, useMemo, Suspense, useLayoutEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame, useResource, useThree } from \"react-three-fiber\";\n\nimport {\n  Text,\n  Box,\n  Octahedron,\n} from \"@react-three/drei\";\nimport { mirrorsData } from \"./mirrorsData\";\nimport font from \"../../../src/fonts/Metropolis-ExtraBold.otf\";\nimport { ThinFilmFresnelMap } from './ThinFilmFresnelMap.js'\nimport \"./style.css\";\n// import {useSpring, a, animated} from \"react-spring\"\n\nimport { useSpring, animated } from \"react-spring\"\n\n\nfunction Title({ layers = undefined, titlePosi, ...props }) {\n  const group = useRef();\n  const [event, setEvent] = useState(false);\n  const x = window.matchMedia(\"(max-width: 650px)\");\n  x.addListener(setEvent);\n\n  useEffect(() => {\n    group.current.lookAt(0, 0, 0);\n  }, []);\n  const textProps = {\n    fontSize: 2.8,\n    anchorX: \"center\",\n    font: font,\n    fontWeight: 100,\n    // font: \"https://fonts.googleapis.com/css2?family=Inter:wght@100;200&display=swap\",\n    // font: \"https://fonts.gstatic.com/s/syncopate/v12/pe0pMIuPIYBCpEV5eFdKvtKqBP5p.woff\",\n    // \"https://fonts.gstatic.com/s/syncopate/v12/pe0pMIuPIYBCpEV5eFdKvtKqBP5p.woff\",\n    // font: \"https://fonts.gstatic.com/s/kanit/v7/nKKU-Go6G5tXcr4WPBWnVac.woff\",\n  };\n\nconst AnimatedText = animated(Text)\n  return (\n    <group {...props} ref={group}>\n      <AnimatedText\n        native\n        name=\"title-text\"\n        depthTest={false}\n        material-toneMapped={false}\n        material-color=\"#f4f4f4\"\n        position={[x.matches ? 0.5 : 0, 0, -6]}\n        // maxWidth={x.matches ? 6 : 12}\n        // textAlign={x.matches ? \"left\" : \"center\"}\n        {...textProps}\n        layers={layers}\n      >\n       mirrors.\n      </AnimatedText>\n    </group>\n  );\n}\n\nfunction TitleCopies({ layers }) {\n  const vertices = useMemo(() => {\n    const y = new THREE.IcosahedronGeometry(6);\n    return y.vertices;\n  }, []);\n  return (\n    <group name=\"titleCopies\">\n      {vertices.map((vertex, i) => (\n        <Title name={\"titleCopy-\" + i} position={vertex} layers={layers} key={i} />\n      ))}\n    </group>\n  );\n}\n\nfunction Mirror({ sideMaterial, reflectionMaterial, args, ...props }) {\n  const ref = useRef();\n useFrame(() => {\n    if (ref.current) {\n      ref.current.rotation.y += 0.001\n      ref.current.rotation.z += 0.01\n    }\n  })\n\n  return (\n    <Box\n      {...props}\n      ref={ref}\n      args={args}\n      material={[\n        sideMaterial,\n        sideMaterial,\n        sideMaterial,\n        sideMaterial,\n        reflectionMaterial,\n        reflectionMaterial,\n      ]}\n    />\n  );\n}\n\nfunction Mirrors({ envMap }) {\n  const sideMaterial = useResource();\n  const reflectionMaterial = useResource();\n  const [thinFilmFresnelMap] = useState(new ThinFilmFresnelMap())\n  return (\n    <>\n      <meshLambertMaterial\n        ref={sideMaterial}\n        map={thinFilmFresnelMap}\n        color={0xaaaaa}\n        // color={\"#C0C0C0\"}\n      />\n      <meshLambertMaterial\n        ref={reflectionMaterial}\n        map={thinFilmFresnelMap}\n        color={0xd5550}\n        // color={\"#808080\"}\n        envMap={envMap}\n      />\n      {mirrorsData.mirrors.map((mirror, index) => (\n        <Mirror\n          key={`mirror-${index}`}\n          {...mirror}\n          sideMaterial={sideMaterial.current}\n          reflectionMaterial={reflectionMaterial.current}\n        />\n      ))}\n    </>\n  );\n}\n\nfunction useRenderTarget() {\n  const cubeCamera = useRef();\n  const [renderTarget] = useState(\n    new THREE.WebGLCubeRenderTarget(1024, {\n      format: THREE.RGBAFormat,\n      generateMipmaps: true,\n    })\n  );\n\n  useFrame(({ gl, scene }) => {\n    cubeCamera.current.update(gl, scene);\n  });\n  return [cubeCamera, renderTarget];\n}\n\nfunction Scene() {\n  const group = useRef();\n  const [cubeCamera, renderTarget] = useRenderTarget();\n  // const [ref, api] = useBox(() => ({ args: 0.01, mass: 50 }));\n  const rotationEuler = new THREE.Euler(0, 0, 0);\n  const rotationQuaternion = new THREE.Quaternion(0, 0, 0, 0);\n  const { viewport } = useThree();\n\n  useFrame(({ mouse }) => {\n    const x = (mouse.x * viewport.width) / 100;\n    const y = (mouse.y * viewport.height) / 100;\n\n    rotationEuler.set(y, x, 0);\n    rotationQuaternion.setFromEuler(rotationEuler);\n\n    group.current.quaternion.slerp(rotationQuaternion, 0.1);\n    group.current.position.z = 6;\n  });\n  const AnimatedTitle = animated(Title);\n\n  return (\n    <group ref={group}>\n      <Octahedron\n        layers={[1]}\n        name=\"background\"\n        args={[20, 4, 4]}\n        position={[0, 0, -5]}\n      >\n        <meshMatcapMaterial\n          side={THREE.BackSide}\n          transparent\n          opacity={0.3}\n          color=\"#FFF\"\n        />\n      </Octahedron>\n      <cubeCamera\n        layers={[11]}\n        name=\"cubeCamera\"\n        ref={cubeCamera}\n        args={[0.1, 100, renderTarget]}\n        position={[0, 0, 5]}\n      />\n      <AnimatedTitle native name=\"title\" />\n  \n      <TitleCopies layers={[11]} />\n      <Mirrors layers={[0, 11]} envMap={renderTarget.texture} />\n    </group>\n  );\n}\n\n// function Header({ blur, blurValue, titlePosi }) {\n//   // const Headerstyle = {\n//   //   filter: \"blur(\" + blurValue + \")\",\n//   // };\n//   // style={Headerstyle}\n//   return (\n//     <div id=\"header\" >\n//       <Canvas concurrent shadowMap camera={{ position: [0, 0, 3], fov: 70 }}>\n//         {/* <color attach=\"background\" args={[\"#fff\"]} /> */}\n//         <ambientLight intensity={0.2} />\n        \n//           <pointLight position={[0, 10, 20]} intensity={2}  />\n//           {/* <OrbitControls /> */}\n//           <Physics>\n//             <Scene />\n//             {/* <Scene titlePosi={titlePosi} /> */}\n//           </Physics>\n\n//       </Canvas>\n//     </div>\n//   );\n// }\n\nexport default Scene;\n","import React, {Suspense} from \"react\";\n// import Wrapper from \"./components/Wrapper\";\n// import Landing from \"./components/Landing\";\nimport \"./App.css\";\n\nimport Scene from \"./components/Header\"\nimport { Canvas } from \"react-three-fiber\";\nimport { useProgress, Html, OrbitControls } from \"@react-three/drei\";\nimport { Physics, useBox } from \"use-cannon\";\nimport { Link } from 'react-router-dom';\nimport { SiGithub } from 'react-icons/si';\n\nfunction App() {\n\n\n  function Loader() {\n    const { progress } = useProgress();\n    return (\n      <Html center>\n        <span style={{ color: '#FFFFFF' }}>{progress} % loaded</span>\n      </Html>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n    <Canvas concurrent shadowMap camera={{ position: [0, 0, 5], fov: 70 }}>\n      <color attach=\"background\" args={['#000']} />\n      <Suspense fallback={<Loader />}>\n        <Physics>\n       <Scene />\n       </Physics>\n      </Suspense>\n      <ambientLight intensity={2} />\n     <OrbitControls maxDistance={26} minDistance={10}/>\n\n    </Canvas>\n    <div className=\"overlay\">\n    <div className=\"list\">\n    <Link className=\"item\" to=\"https://www.aarondig.com\">\n      aarondig.com\n      </Link>\n      <Link className=\"item\" to=\"https://www.github.com/aarondig\">\n    <SiGithub size={26}/>\n      \n      </Link>\n      </div>\n      \n    </div>\n    </div>\n  )\n  \n  \n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  HashRouter as Router,Routes,\n  Route\n} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n<Routes>\n    <Route path='/' element={<App/>} />\n    </Routes>\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}